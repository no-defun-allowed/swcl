(
(#(1EE7DBF0 45DA68C6 720BA130 831C0B63 9100CEE7 DC5C890A)
 "#(COMPILATION-SPEED DEBUG SAFETY SPACE SPEED INHIBIT-WARNINGS)"
 "(  (& (- val (>> val 14)) 7))")
(#(50EDFBF1 6C16ABD3 AC25889A E8DC3557)
 "#(EQ EQL EQUAL EQUALP)"
 "(  (& (>> val 19) 3) )")
(#(B9C768B 10F03C3F 12B1CA05 45F0CFC0 50CB4174 590BA280 5B1BC013 71D09675 85684073 9BD471AE 9D9A6442 9ED11C51 C04C0C03 C2A9CF02
   D00D4EAD EA52310C)
 "#(((:TYPE VALUES-TYPE)) ((:TYPE FUN-DESIGNATOR-TYPE) (:TYPE FUN-TYPE)) ((:TYPE NUMERIC-TYPE)) ((:TYPE UNION-TYPE) (:TYPE INTERSECTION-TYPE) (:TYPE COMPOUND-TYPE)) ((:TYPE MEMBER-TYPE)) ((:TYPE ARRAY-TYPE)) ((:TYPE UNKNOWN-TYPE) (:TYPE HAIRY-TYPE)) ((:TYPE NEGATION-TYPE)) ((:TYPE CONSTANT-TYPE)) ((:TYPE CONS-TYPE)) ((:TYPE CHARACTER-SET-TYPE)) ((:TYPE ALIEN-TYPE-TYPE)))"
 "((let ((tab #a((8) (unsigned-byte 8) 5 12 13 13 12 0 14 4)))
  (let ((b (& (>> val 20) #x7)))
   (let ((a (>> (<< val 3) 29)))
    (^ a (aref tab b))))))")
(#(B9C768B 10F03C3F 12B1CA05 2F507C88 45F0CFC0 50CB4174 590BA280 5B1BC013 71D09675 9BD471AE 9D9A6442 9ED11C51 C04C0C03 C2A9CF02
   D00D4EAD)
 "#(((:TYPE UNKNOWN-TYPE) (:TYPE HAIRY-TYPE) (:TYPE CHARACTER-SET-TYPE) (:TYPE MEMBER-TYPE) (:TYPE NUMERIC-TYPE)) ((:TYPE VALUES-TYPE) (:TYPE FUN-TYPE) (:TYPE FUN-DESIGNATOR-TYPE) (:TYPE ARGS-TYPE)) ((:TYPE CONS-TYPE)) ((:TYPE ARRAY-TYPE)) ((:TYPE UNION-TYPE) (:TYPE INTERSECTION-TYPE) (:TYPE COMPOUND-TYPE)) ((:TYPE NEGATION-TYPE)))"
 "((let ((tab #a((8) (unsigned-byte 8) 12 0 6 0 11 13 1 8)))
  (let ((b (& (>> val 1) #x7)))
   (let ((a (>> (<< val 5) 29)))
    (^ a (aref tab b))))))")
(#(3C5A72CA 42CFF1D7 50A623EF 5545367C 57ED033B 886D78E6 9ABE6FD6 A82C3140 AFB09C7B C15E0DAC DA3A52C4 DB03D182 EA7496BF)
 "#(:REQUIRED &OPTIONAL &REST &MORE &KEY &AUX &ENVIRONMENT &WHOLE &ALLOW-OTHER-KEYS &BODY :POST-ENV :POST-REST :POST-MORE)"
 "((let ((tab #a((8) (unsigned-byte 8) 0 11 8 1 0 5 0 1)))
  (let ((b (& (>> val 8) #x7)))
   (let ((a (>> (<< val 5) 29)))
    (^ a (aref tab b))))))")
(#(10ACE44E 205367CA 2341D8DB 46CC6774 47991116 5597FB3D 5CDDC111 711BEFAB 728F28C5 74748736 965CD62A A0FAB3A5 A2E1D524
   A7E15D52 B734105A C3127E24)
 "#(SB-ALIEN::ROOT INTEGER BOOLEAN ENUM FLOAT SINGLE-FLOAT DOUBLE-FLOAT SYSTEM-AREA-POINTER ALIEN-VALUE SB-ALIEN::POINTER SB-ALIEN::MEM-BLOCK ARRAY SB-ALIEN::RECORD SB-ALIEN::FUN VALUES C-STRING)"
 "((let ((tab #a((8) (unsigned-byte 8) 12 12 0 0 14 13 12 2)))
  (let ((b (& (>> val 19) #x7)))
   (let ((a (>> (<< val 5) 29)))
    (^ a (aref tab b))))))")
(#(22AFA1 1781B8EE 3367E1A7 4B24E58A 4C54776F 73DF5C31 817A567A B333E4FD B7FC0C80 B87F95C8 BBF4926A BD7DF1CF C2BD8973 C9C1A5C8
   ED992F6D)
 "#(((:TYPE ALIEN-BOOLEAN-TYPE) (:TYPE ALIEN-ENUM-TYPE) (:TYPE ALIEN-INTEGER-TYPE)) ((:TYPE ALIEN-SINGLE-FLOAT-TYPE) (:TYPE ALIEN-DOUBLE-FLOAT-TYPE) (:TYPE ALIEN-FLOAT-TYPE)) ((:TYPE ALIEN-RECORD-TYPE)) ((:TYPE ALIEN-ARRAY-TYPE)) ((:TYPE SB-ALIEN::ALIEN-C-STRING-TYPE)) ((:TYPE ALIEN-POINTER-TYPE)) ((:TYPE ALIEN-FUN-TYPE)) ((:TYPE SB-ALIEN::ALIEN-ALIEN-VALUE-TYPE) (:TYPE SB-ALIEN::ALIEN-MEM-BLOCK-TYPE) (:TYPE SB-ALIEN::ALIEN-SYSTEM-AREA-POINTER-TYPE)) ((:TYPE ALIEN-VALUES-TYPE)))"
 "((let ((tab #a((8) (unsigned-byte 8) 13 3 13 11 5 8 1 0)))
  (let ((b (& (>> val 20) #x7)))
   (let ((a (>> (<< val 5) 29)))
    (^ a (aref tab b))))))")
(#(10ACE44E 3539E037 763F1FFB 965CD62A A0FAB3A5 AC7D417F B6EC8FEB E0A39FB8 FEAFF6CF)
 "#(FIXNUM SINGLE-FLOAT DOUBLE-FLOAT INTEGER SB-VM:SIGNED-WORD WORD BIGNUM COMPLEX RATIO)"
 "((let ((tab #a((8) (unsigned-byte 8) 5 0 0 5 0 13 3 0)))
  (let ((b (& val #x7)))
   (let ((a (>> val 29)))
    (^ a (aref tab b))))))")
(#(10F03C3F 12B1CA05 2F507C88 45F0CFC0 50CB4174 590BA280 5B1BC013 85684073 9ED11C51 C2A9CF02 D00D4EAD)
 "#(((:TYPE UNION-TYPE) (:TYPE INTERSECTION-TYPE) (:TYPE COMPOUND-TYPE)) ((:TYPE NEGATION-TYPE)) ((:TYPE CONS-TYPE)) ((:TYPE ARRAY-TYPE)) ((:TYPE CONSTANT-TYPE)) ((:TYPE VALUES-TYPE) (:TYPE FUN-TYPE) (:TYPE FUN-DESIGNATOR-TYPE) (:TYPE ARGS-TYPE)))"
 "((let ((tab #a((8) (unsigned-byte 8) 0 12 9 14 3 5 3 2)))
  (let ((b (& (>> val 20) #x7)))
   (let ((a (>> (<< val 31) 29)))
    (^ a (aref tab b))))))")
(#(B9C768B BE624AE E10476C 10F03C3F 12B1CA05 2F507C88 3B031FB6 45F0CFC0 48AED6B6 50CB4174 590BA280 5B1BC013 6363C5E7 71D09675
   7D757045 85684073 8AE95BDE 9846CAB7 9BD471AE 9D9A6442 9ED11C51 C04C0C03 C2A9CF02 D00D4EAD EA52310C FBD5DA6A)
 "#(((:TYPE NUMERIC-TYPE)) ((:TYPE ARRAY-TYPE)) ((:TYPE UNION-TYPE)) ((:TYPE INTERSECTION-TYPE)) ((:TYPE MEMBER-TYPE)) ((:TYPE NAMED-TYPE)) ((:TYPE CHARACTER-SET-TYPE)) ((:TYPE CONS-TYPE)) ((:TYPE BUILT-IN-CLASSOID)) ((:TYPE FUN-DESIGNATOR-TYPE)) ((:TYPE FUN-TYPE)) ((:TYPE UNDEFINED-CLASSOID) (:TYPE CONDITION-CLASSOID) (:TYPE STRUCTURE-CLASSOID) (:TYPE STANDARD-CLASSOID) (:TYPE STATIC-CLASSOID) (:TYPE CLASSOID)) ((:TYPE CONSTANT-TYPE) (:TYPE VALUES-TYPE) (:TYPE ARGS-TYPE) (:TYPE UNKNOWN-TYPE) (:TYPE NEGATION-TYPE) (:TYPE ALIEN-TYPE-TYPE) (:TYPE HAIRY-TYPE) (:TYPE COMPOUND-TYPE) (:TYPE CTYPE)))"
 "((let ((tab #a((16) (unsigned-byte 8) 14 15 0 0 21 1 17 12 7 0 13 12 21 18 31 17)))
  (let ((b (& val #xf)))
   (let ((a (>> (<< val 7) 28)))
    (^ a (aref tab b))))))")
(#(790E4AF 73E1E633 8E8B60F0 C3EABF48 C65B82DD C97CFF28 D8C1EE02 F11FE118 FBADBE01)
 "#(:INCLUDE :INITIAL-OFFSET :PURE :TYPE :CONC-NAME :COPIER :PREDICATE :PRINT-FUNCTION :PRINT-OBJECT)"
 "((let ((tab #a((8) (unsigned-byte 8) 0 8 0 5 0 2 3 0)))
  (let ((b (& (>> val 3) #x7)))
   (let ((a (>> (<< val 31) 29)))
    (^ a (aref tab b))))))")
(#(361A9014 52F791B3 717195B9 7A38389C 8F849AB1 A8249CA2 BDE485A0)
 "#(:ABSOLUTE :LAYOUT-ID :B :BA :HA :L :RLDIC-M)"
 "(  (& (+ val (>> val 1)) 7))")
(#(19A804F1 3D6712AB 42354AFF 511F123D 52F791B3 8AFF6C0B B6C53C5B C085651F C4F3111F CB28EF79 CB2A2A51 E7BDDEAC EED915AA
   F1366560 FB4D653B)
 "#(:ASSEMBLY-ROUTINE :ASSEMBLY-ROUTINE* :CARD-TABLE-INDEX-MASK :SYMBOL-TLS-INDEX :ALIEN-CODE-LINKAGE-INDEX :ALIEN-DATA-LINKAGE-INDEX :FOREIGN :FOREIGN-DATAREF :CODE-OBJECT :LAYOUT :IMMOBILE-SYMBOL :FDEFN-CALL :STATIC-CALL :SYMBOL-VALUE :LAYOUT-ID)"
 "((let ((tab #a((8) (unsigned-byte 8) 12 0 0 0 0 14 13 8)))
  (let ((b (& (>> val 4) #x7)))
   (let ((a (>> (<< val 5) 29)))
    (^ a (aref tab b))))))")
(#(5361C23E 714D6B00 88BA357D 9094FA5E ABD78E01 B313FB62 BB01FF63 C0D75980 C572C849 D5F9BEF5 DDD5A9D4 DE352140 E3708909
   F279B4C6 F93DE6E0)
 "#(((:TYPE SB-C::CDYNAMIC-EXTENT) (:TYPE SB-C::COMBINATION) (:TYPE SB-C::ENCLOSE) (:TYPE EXIT) (:TYPE DELAY) (:TYPE SB-C::BOUND-CAST) (:TYPE SB-C::ARRAY-INDEX-CAST) (:TYPE CAST) (:TYPE SB-C::MV-COMBINATION) (:TYPE SB-C::ENTRY) (:TYPE SB-C::CIF) (:TYPE SB-C::CRETURN)) ((:TYPE SB-C::REF)) ((:TYPE SB-C::CSET)) ((:TYPE BIND)))"
 "((let ((tab #a((8) (unsigned-byte 8) 8 0 4 8 0 1 13 9)))
  (let ((b (& (>> val 8) #x7)))
   (let ((a (>> (<< val 5) 29)))
    (^ a (aref tab b))))))")
(#(7AB68FF5 B15ADCA9 CFEE5049 D3801745 F458B829)
 "#(:BINDS :CALLS :SETS :REFERENCES :MACROEXPANDS)"
 "(  (& (+ (>> val 2) (>> val 16)) 7))")
(#(3AE2E596 5361C23E 714D6B00 88BA357D 9094FA5E ABD78E01 B313FB62 BB01FF63 C572C849 D5F9BEF5 DDD5A9D4 DE352140 F279B4C6)
 "#(((:TYPE BIND) (:TYPE SB-C::REF)) ((:TYPE SB-C::CIF)) ((:TYPE SB-C::CSET)) ((:TYPE SB-C::CRETURN)) ((:TYPE EXIT)) ((:TYPE SB-C::COMBINATION) (:TYPE SB-C::MV-COMBINATION) (:TYPE SB-C::BASIC-COMBINATION)) ((:TYPE DELAY) (:TYPE SB-C::BOUND-CAST) (:TYPE SB-C::ARRAY-INDEX-CAST) (:TYPE CAST)))"
 "((let ((tab #a((8) (unsigned-byte 8) 9 0 0 8 0 8 4 7)))
  (let ((b (& (>> val 8) #x7)))
   (let ((a (>> (<< val 5) 29)))
    (^ a (aref tab b))))))")
(#(3AE2E596 5361C23E 714D6B00 88BA357D 9094FA5E ABD78E01 B313FB62 BB01FF63 C0D75980 C572C849 D5F9BEF5 DDD5A9D4 DE352140
   E3708909 F279B4C6 F93DE6E0)
 "#(((:TYPE SB-C::REF)) ((:TYPE SB-C::CIF)) ((:TYPE SB-C::COMBINATION) (:TYPE SB-C::MV-COMBINATION) (:TYPE SB-C::BASIC-COMBINATION)) ((:TYPE BIND)) ((:TYPE EXIT)) ((:TYPE SB-C::ENTRY)) ((:TYPE SB-C::CRETURN)) ((:TYPE SB-C::CSET)) ((:TYPE DELAY) (:TYPE SB-C::BOUND-CAST) (:TYPE SB-C::ARRAY-INDEX-CAST) (:TYPE CAST)) ((:TYPE SB-C::ENCLOSE)) ((:TYPE SB-C::CDYNAMIC-EXTENT)))"
 "((let ((tab #a((8) (unsigned-byte 8) 14 0 4 13 0 8 12 2)))
  (let ((b (& (>> val 8) #x7)))
   (let ((a (>> (<< val 5) 29)))
    (^ a (aref tab b))))))")
(#(5361C23E 714D6B00 88BA357D 9094FA5E ABD78E01 B313FB62 BB01FF63 D5F9BEF5 DDD5A9D4 DE352140 F279B4C6)
 "#(((:TYPE SB-C::REF)) ((:TYPE SB-C::COMBINATION)) ((:TYPE SB-C::CIF)) ((:TYPE SB-C::CRETURN)) ((:TYPE SB-C::MV-COMBINATION)) ((:TYPE EXIT)) ((:TYPE SB-C::CSET)) ((:TYPE DELAY) (:TYPE SB-C::BOUND-CAST) (:TYPE SB-C::ARRAY-INDEX-CAST) (:TYPE CAST)))"
 "((let ((tab #a((8) (unsigned-byte 8) 0 0 12 5 7 12 0 0)))
  (let ((b (& val #x7)))
   (let ((a (>> val 29)))
    (^ a (aref tab b))))))")
(#(5361C23E 714D6B00 9094FA5E ABD78E01 B313FB62 D5F9BEF5 DDD5A9D4 DE352140 F279B4C6)
 "#(((:TYPE SB-C::REF)) ((:TYPE SB-C::COMBINATION)) ((:TYPE SB-C::MV-COMBINATION)) ((:TYPE EXIT)) ((:TYPE SB-C::CSET)) ((:TYPE DELAY) (:TYPE SB-C::BOUND-CAST) (:TYPE SB-C::ARRAY-INDEX-CAST) (:TYPE CAST)))"
 "((let ((tab #a((8) (unsigned-byte 8) 0 0 13 0 7 6 0 0)))
  (let ((b (& val #x7)))
   (let ((a (>> val 29)))
    (^ a (aref tab b))))))")
(#(454D771A 6E662212 722CCC2C 998F6CF8 D9CC6462 F1D6C45D FCE1331A)
 "#(((:TYPE SB-C::CLAMBDA) (:TYPE SB-C::OPTIONAL-DISPATCH) (:TYPE SB-C::FUNCTIONAL) (:TYPE CONSTANT)) ((:TYPE SB-C::LAMBDA-VAR)) ((:TYPE SB-C::DEFINED-FUN)) ((:TYPE SB-C::GLOBAL-VAR)))"
 "(  (& (^ (>> val 2) (>> val 10)) 7))")
(#(714D6B00 9094FA5E ABD78E01 B313FB62 C572C849 DDD5A9D4 DE352140 F279B4C6)
 "#(((:TYPE BIND)) ((:TYPE SB-C::REF)) ((:TYPE DELAY) (:TYPE SB-C::BOUND-CAST) (:TYPE SB-C::ARRAY-INDEX-CAST) (:TYPE CAST)) ((:TYPE SB-C::CSET)) ((:TYPE SB-C::COMBINATION)))"
 "(  (& (+ (>> val 4) (>> val 9)) 7))")
(#(54FC85B 17D252E7 377D1CA8 519DD3CE 6E2BAD2D 7614C426 BDE3EA38 D52CECC7)
 "#(:UNKNOWN-RETURN :KNOWN-RETURN :INTERNAL-ERROR :NON-LOCAL-EXIT :BLOCK-START :CALL-SITE :SINGLE-VALUE-RETURN :NON-LOCAL-ENTRY)"
 "(  (& (^ (>> val 2) (>> val 12)) 7))")
(#(1A301372 3052A89D 473C74AB 48FBACAC 4DA6DC6C 55F6D36B 77777223 82C86917 9F4505D4 A4454CA7 A647599C B2C4B33F BD0E4352
   C35F4DD7 C8A25DB2 D99277C8 EB1E2C6C)
 "#(T SB-VM:*CURRENT-CATCH-BLOCK* SB-VM::*CURRENT-UNWIND-PROTECT-BLOCK* SB-VM::*IMMOBILE-CODEBLOB-TREE* SB-VM::*IMMOBILE-CODEBLOB-VECTOR* SB-VM::*DYNSPACE-CODEBLOB-TREE* SB-IMPL::**FINALIZER-STORE** SB-IMPL::*FINALIZER-REHASHLIST* SB-IMPL::*FINALIZERS-TRIGGERED* SB-THREAD::*STARTING-THREADS* SB-VM::*FREE-TLS-INDEX* SB-VM::+REQUIRED-FOREIGN-SYMBOLS+ *GC-EPOCH* %%DATA-VECTOR-REFFERS%% SB-VM::%%DATA-VECTOR-REFFERS/CHECK-BOUNDS%% %%DATA-VECTOR-SETTERS%% SB-VM::%%DATA-VECTOR-SETTERS/CHECK-BOUNDS%%)"
 "((let ((tab #a((16) (unsigned-byte 8) 0 0 1 0 11 0 0 12 0 0 0 12 0 13 0 22)))
  (let ((b (& val #xf)))
   (let ((a (>> (<< val 7) 28)))
    (^ a (aref tab b))))))")
(#(154A3B0 7AACD0D EE643F5 1BB39CAB 22FDA262 25C512C8 305A3B6B 33893B8A 34338FFE 36006C21 37B7B1E3 441D6918 49C8CDB2 50EDFBF1
   58FAED48 5E1281A1 5E440B44 5F91445F 630C4B59 6E2BAD2D 6EC9BAEC 7169F6EF 73A0CCDC 7F2D8268 839AF3E3 8471EF8C 8DB01467
   95785927 96254BD9 9B67B3CC A33A8187 A9F4AEDC AAAC2A1C B2B882E2 B6320B0B C0853F67 C2237D40 CB8DC35C D6AE8C5F D9F0FE17
   E5D7EC7D E5F32E85 E8DC3557 E9A6A6C4 FBDC902B FCF5C338)
 "#(SUB-GC POST-GC INTERNAL-ERROR CONTROL-STACK-EXHAUSTED-ERROR BINDING-STACK-EXHAUSTED-ERROR ALIEN-STACK-EXHAUSTED-ERROR HEAP-EXHAUSTED-ERROR UNDEFINED-ALIEN-VARIABLE-ERROR MEMORY-FAULT-ERROR UNHANDLED-TRAP-ERROR UNDEFINED-ALIEN-FUN-ERROR SB-DI::HANDLE-BREAKPOINT SB-DI::HANDLE-SINGLE-STEP-TRAP ENTER-ALIEN-CALLBACK SB-THREAD::ENTER-FOREIGN-CALLBACK TWO-ARG-<= TWO-ARG->= TWO-ARG-/= TWO-ARG-+ TWO-ARG-- TWO-ARG-* TWO-ARG-/ TWO-ARG-< TWO-ARG-> TWO-ARG-= EQL %NEGATE LENGTH ERROR FORMAT EQUALP SB-C::CHECK-DS-LIST SB-C::CHECK-DS-LIST/&REST WRITE-STRING WRITE-CHAR PRINC HAIRY-DATA-VECTOR-SET HAIRY-DATA-VECTOR-REF VECTOR-HAIRY-DATA-VECTOR-SET VECTOR-HAIRY-DATA-VECTOR-REF HAIRY-DATA-VECTOR-SET/CHECK-BOUNDS HAIRY-DATA-VECTOR-REF/CHECK-BOUNDS VECTOR-HAIRY-DATA-VECTOR-SET/CHECK-BOUNDS VECTOR-HAIRY-DATA-VECTOR-REF/CHECK-BOUNDS %LDB VECTOR-UNSIGNED-BYTE-8-P)"
 "((let ((tab #a((32) (unsigned-byte 8) 36 0 0 9 51 36 28 0 0 0 0 19 19 0 0 46 19 0 0 0 34 14 0 49 0 51 61 0 61 0 50 47)))
  (let ((b (& (>> val 1) #x1f)))
   (let ((a (>> (<< val 9) 27)))
    (^ a (aref tab b))))))")
(#(820022 12D65FF7 15802369 2F5FD56F 63E7A20E 6FC25D49 804A5D47 9B65AE2D A31AF97E B21914BD CD29540C D278DEA5 E6794721 E67AD41E
   E9E52992 EBF9DC24 EFFEC71A FEA15FC4)
 "#(:BO-DNZF :BO-DNZFP :BO-DZF :BO-DZFP :BO-F :BO-FP NIL NIL :BO-DNZT :BO-DNZTP :BO-DZT :BO-DZTP :BO-T :BO-TP NIL NIL :BO-DNZ :BO-DNZP :BO-DZ :BO-DZP :BO-U NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)"
 "((let ((tab #a((16) (unsigned-byte 8) 0 1 13 0 31 15 0 13 0 1 15 0 8 0 0 10)))
  (let ((b (& val #xf)))
   (let ((a (>> val 28)))
    (^ a (aref tab b))))))")
(#(6C16ABD3 71CA0302 B5CE1611 F4569369)
 "#(:LT :GT :EQ :SO)"
 "(  (& (- val (>> val 3)) 3) )")
(#(8E1FB37 1E45D67F 238DADEF 7AB29F90 85E8E133 D33E4C9F E163A824 F7B38584)
 "#(:CR0 :CR1 :CR2 :CR3 :CR4 :CR5 :CR6 :CR7)"
 "(  (& (^ val (>> val 11)) 7))")
(#(326AE117 80CE8459 DCF9423A FCF00468)
 "#(:GE :LE :NE :NS)"
 "(  (& val 3) )")
(#(B9C768B BE624AE 10F03C3F 12B1CA05 3B031FB6 48AED6B6 590BA280 6363C5E7 71D09675 8AE95BDE 9846CAB7 9BD471AE 9D9A6442 C04C0C03
   C2A9CF02 FBD5DA6A)
 "#(((:TYPE MEMBER-TYPE)) ((:TYPE UNDEFINED-CLASSOID) (:TYPE BUILT-IN-CLASSOID) (:TYPE CONDITION-CLASSOID) (:TYPE STRUCTURE-CLASSOID) (:TYPE STANDARD-CLASSOID) (:TYPE STATIC-CLASSOID) (:TYPE CLASSOID)) ((:TYPE CHARACTER-SET-TYPE) (:TYPE ARRAY-TYPE) (:TYPE NUMERIC-TYPE) (:TYPE CONS-TYPE)) ((:TYPE INTERSECTION-TYPE)) ((:TYPE UNION-TYPE)) ((:TYPE UNKNOWN-TYPE) (:TYPE HAIRY-TYPE)))"
 "((let ((tab #a((8) (unsigned-byte 8) 0 5 15 12 12 5 3 15)))
  (let ((b (& (>> val 15) #x7)))
   (let ((a (>> (<< val 3) 29)))
    (^ a (aref tab b))))))")
(#(B9C768B BE624AE 10F03C3F 12B1CA05 2F507C88 3B031FB6 45F0CFC0 48AED6B6 50CB4174 590BA280 5B1BC013 6363C5E7 71D09675 8AE95BDE
   9846CAB7 9BD471AE 9D9A6442 C04C0C03 C2A9CF02 D00D4EAD FBD5DA6A)
 "#(((:TYPE UNKNOWN-TYPE) (:TYPE HAIRY-TYPE)) ((:TYPE NEGATION-TYPE)) ((:TYPE UNION-TYPE)) ((:TYPE INTERSECTION-TYPE)) ((:TYPE MEMBER-TYPE)) ((:TYPE VALUES-TYPE) (:TYPE FUN-TYPE) (:TYPE FUN-DESIGNATOR-TYPE) (:TYPE ARGS-TYPE)) ((:TYPE NUMERIC-TYPE)) ((:TYPE UNDEFINED-CLASSOID) (:TYPE BUILT-IN-CLASSOID) (:TYPE CONDITION-CLASSOID) (:TYPE STRUCTURE-CLASSOID) (:TYPE STANDARD-CLASSOID) (:TYPE STATIC-CLASSOID) (:TYPE CLASSOID)) ((:TYPE ARRAY-TYPE)) ((:TYPE CONS-TYPE)) ((:TYPE CHARACTER-SET-TYPE)))"
 "((let ((tab #a((16) (unsigned-byte 8) 0 0 7 15 3 0 16 11 13 0 3 16 0 31 0 16)))
  (let ((b (& val #xf)))
   (let ((a (>> val 28)))
    (^ a (aref tab b))))))")
(#(1AE86B1B 874B4BCB BBCCDE6E C9C163C0 FC2116FC)
 "#(((:TYPE SB-PRETTY::NEWLINE)) ((:TYPE SB-PRETTY::INDENTATION)) ((:TYPE SB-PRETTY::BLOCK-START)) ((:TYPE SB-PRETTY::BLOCK-END)) ((:TYPE SB-PRETTY::TAB)))"
 "(  (& (- val (>> val 21)) 7))")
(#(246D4FD0 321B4470 42CAE6A9 55DFCE4E)
 "(SB-VM::FIXEDOBJ SB-VM::TEXT SB-VM::PERMGEN SB-VM::READ-ONLY)"
 "(  (& (>> val 4) 3) )")
(#(3269DBE1 47F582BB 49A5AA56 7D224C44 9E895E42 CE38123D)
 "(SPECIAL IGNORABLE IGNORE DYNAMIC-EXTENT SB-C::CONSTANT-VALUE SB-C::NO-CONSTRAINTS)"
 "(  (& (- (>> val 4) (>> val 27)) 7))")
(#(820022 7980B71D 7C678985 CD22F006)
 "(NIL BASE-CHAR CHARACTER *)"
 "(  (& (>> val 23) 3) )")
(#(4C25CEB9 B0581DD2 D9F0FE17 E43E9C8A)
 "(SIGNAL ERROR CERROR WARN)"
 "(  (& (>> val 18) 3) )")
(#(820022 10ACE44E 74748736 971A1DF1)
 "(NIL FLOAT RATIONAL INTEGER)"
 "(  (& (>> val 18) 3) )")
(#(21EEAED8 CBC8EE4C DA0BA737 E2AA03BE)
 "(SB-PCL::READER SB-PCL::WRITER BOUNDP MAKUNBOUND)"
 "(  (& (>> val 6) 3) )")
(#(70CB34EE 73FF2F2A FBE234BC FF414202)
 "(FUNCALLABLE-STRUCTURE LIST VECTOR STRUCTURE)"
 "(  (& (+ val (>> val 2)) 3) )")
(#(3C5A72CA 42CFF1D7 50A623EF 5545367C 9ABE6FD6 A82C3140 AFB09C7B DB03D182 EA7496BF)
 "(&ALLOW-OTHER-KEYS &AUX &BODY &ENVIRONMENT &KEY &MORE &OPTIONAL &REST &WHOLE)"
 "((let ((tab #a((8) (unsigned-byte 8) 12 0 3 0 7 5 0 2)))
  (let ((b (& (>> val 7) #x7)))
   (let ((a (>> (<< val 31) 29)))
    (^ a (aref tab b))))))")
(#(820022 E022967D FB685091 FF5AE652)
 "(NIL :HEAD :TAIL :BOTH)"
 "(  (& (>> val 5) 3) )")
(#(820022 905F66AC 92586CF4 9D5025AF)
 "(:SPECIAL-FORM :MACRO :FUNCTION NIL)"
 "(  (& (- val (>> val 2)) 3) )")
(#(60268B01 73FD5977 A9A91179 EC8EB822)
 "(:DEFINED :ASSUMED :DEFINED-METHOD :DECLARED)"
 "(  (& (+ val (>> val 2)) 3) )")
(#(820022 19627350 3932B57B C3C1E2DD)
 "(NIL NOTINLINE MAYBE-INLINE INLINE)"
 "(  (& val 3) )")
(#(32C229AB 3CB93D68 67803F22 97B016E6 9D5025AF CE38123D)
 "(:UNKNOWN :ALIEN :GLOBAL :MACRO :CONSTANT :SPECIAL)"
 "(  (& (- val (>> val 30)) 7))")
(#(820022 12D85B02 47ED28C7 568510D9 EC8EB822)
 "(NIL :FORTHCOMING-DEFCLASS-TYPE :INSTANCE :DEFINED :PRIMITIVE)"
 "(  (& (^ (>> val 3) (>> val 25)) 7))")
(#(76A22E5D BABC0674 D05C85DE D58C389F)
 "(SB-C::PROPER-OR-DOTTED-LIST SB-C::PROPER-OR-CIRCULAR-LIST SB-C::PROPER-SEQUENCE SB-C::PROPER-LIST)"
 "(  (& val 3) )")
(#(820022 55E45869 62971997 8F406FFB)
 "(:AUTO :IMMOBILE :DYNAMIC NIL)"
 "(  (& (>> val 3) 3) )")
(#(820022 3C28E423 6610551C A1DFDD0E A55DBD6F)
 "(:DELETED :INITIAL :COMPLEX-TOPLEVEL :TOPLEVEL NIL)"
 "(  (& (>> val 23) 7))")
(#(778D875 31C62284 43432EAF 4E504BCF 5163EC3A 7D224C44 D7979E55)
 "(:RESTORE-NSP :DYNAMIC-EXTENT :TAGBODY :BLOCK :UNWIND-PROTECT :CATCH :SPECIAL-BIND)"
 "(  (& (- (>> val 4) (>> val 25)) 7))")
(#(45EE44A3 60268B01 73FD5977 931F2DBC A9A91179 EC8EB822)
 "(:DEFINED-METHOD :DEFINED :DEFINED-HERE :ASSUMED :DECLARED-VERIFY :DECLARED)"
 "(  (& (>> val 12) 7))")
(#(820022 8D87477C C8A25DB2 F987A176)
 "(SB-C::INITIAL-UNUSED T SET NIL)"
 "(  (& (+ val (>> val 6)) 3) )")
(#(3CB93D68 67803F22 CE38123D D4FD9754)
 "(:UNKNOWN :GLOBAL :GLOBAL-FUNCTION :SPECIAL)"
 "(  (& (>> val 2) 3) )")
(#(820022 BA54B74 2F740446 3C28E423 53DC2256 5AC1F5A1 659A1BF7 6F4E2B12 7F853C99 8612A6FE A55DBD6F CF79C550)
 "(:TOPLEVEL-XEP :ZOMBIE :ASSIGNMENT :MV-LET :LET :CLEANUP :ESCAPE :TOPLEVEL :EXTERNAL :DELETED :OPTIONAL NIL)"
 "((let ((tab #a((8) (unsigned-byte 8) 12 5 8 8 0 0 0 0)))
  (let ((b (& val #x7)))
   (let ((a (>> val 29)))
    (^ a (aref tab b))))))")
(#(3C44DAA8 57ED033B 8A3BE106 A3C11751 A872A12A CF79C550)
 "(:MORE-COUNT :MORE-CONTEXT :REST :KEYWORD :OPTIONAL :REQUIRED)"
 "(  (& (- (>> val 4) (>> val 12)) 7))")
(#(32B07AAC 6606156F A156E1ED D9F0FE17 F0526C82)
 "(:UNKNOWN-KEYS :KNOWN :ERROR :FULL :LOCAL)"
 "(  (& (+ (>> val 6) (>> val 24)) 7))")
(#(E353302 3CB93D68 55B0F9E6 A6F460C5 F3C0A986)
 "(:STACK :UNUSED :UNKNOWN :FIXED :DELAYED)"
 "(  (& (- (>> val 3) (>> val 29)) 7))")
(#(658DFD3D DBEA8F1C E4A850F1 F1E59E1F FE1CE099)
 "(:FAST-SAFE :FAST :SMALL-SAFE :SMALL :SAFE)"
 "(  (& (+ (>> val 1) (>> val 24)) 7))")
(#(820022 83A45D5A 90B78E0C C8A25DB2)
 "(:COMPUTE-ONLY :FORCE-TO-STACK NIL T)"
 "(  (& (>> val 3) 3) )")
(#(820022 519DD3CE 55B0F9E6 70E7C178 92E00046)
 "(:FIXED :KNOWN-RETURN :LOCAL-CALL :FULL-CALL NIL)"
 "(  (& (+ (>> val 1) (>> val 12)) 7))")
(#(1B41D7F E5AE22E 32C229AB 58436D89 5AAEBDB1 5EB9987A A16520EC A6F460C5 BA77CFAC DD942C4E E648CF0A EAD102A2)
 "(:ARG-PASS :SPECIFIED-SAVE :UNUSED :ALIAS :COMPONENT :CONSTANT :LOAD :SAVE-ONCE :SAVE :DEBUG-ENVIRONMENT :ENVIRONMENT :NORMAL)"
 "((let ((tab #a((8) (unsigned-byte 8) 8 0 0 0 13 10 5 2)))
  (let ((b (& (>> val 13) #x7)))
   (let ((a (>> (<< val 5) 29)))
    (^ a (aref tab b))))))")
(#(DD98FC2 321B4470 65DBD9C4 D312FF46)
 "(:LIVE :READ-ONLY :WRITE :READ)"
 "(  (& (>> val 1) 3) )")
(#(1887978E 206F3878 4DC2A903 75F09E0B 9DFE1B14)
 "(:MORE-RESULT :MORE-ARGUMENT :TEMPORARY :RESULT :ARGUMENT)"
 "(  (& (>> val 29) 7))")
(#(46CC6774 47991116 5CDDC111 728F28C5 74748736 965CD62A A0FAB3A5 C3127E24)
 "(FLOAT SB-ALIEN::MEM-BLOCK ALIEN-VALUE SINGLE-FLOAT DOUBLE-FLOAT SYSTEM-AREA-POINTER SB-ALIEN::RECORD ENUM)"
 "(  (& (>> val 12) 7))")
(#(C88666B 5ABBB036 BBA372CA DAF1A78D)
 "(:IN :COPY :OUT :IN-OUT)"
 "(  (>> val 30) )")
(#(3D6EC19 92586CF4 A1F724C6 A256D8C6 D8C1EE02)
 "(FUNCTION SB-IMPL::PREDICATE SB-IMPL::KEY SB-IMPL::TEST SB-IMPL::TEST-NOT)"
 "(  (& (- (>> val 4) (>> val 11)) 7))")
(#(820022 60574E06 7BC3707A 7F9752D2)
 "(:UNSPECIFIC :WILD :NEWEST NIL)"
 "(  (& (>> val 4) 3) )")
(#(820022 60574E06 7F9752D2 ED8B5226)
 "(:UNC :WILD :UNSPECIFIC NIL)"
 "(  (^ (& (>> val 4) 2) (& (>> val 2) 1)) )")
(#(B3AD09A 10ACE44E 763F1FFB B6EC8FEB D5A4925F DCE23130 FB12CF33)
 "(SB-VM::POSITIVE-FIXNUM FIXNUM INTEGER BIGNUM SB-VM::UNSIGNED-BYTE-63 SB-VM::UNSIGNED-BYTE-64 SB-VM::SIGNED-BYTE-64)"
 "(  (& (- (>> val 1) (>> val 14)) 7))")
(#(AA421F8 389F67F6 786F215B B3F4A1A1 D692DDF5 F5EA1D35)
 "(COMPILED-FUNCTION HASH-TABLE PACKAGE PATHNAME RANDOM-STATE READTABLE)"
 "(  (& (^ (>> val 1) (>> val 4)) 7))")
(#(8E8B60F0 9D81B113 D8C1EE02 FBADBE01)
 "(:CONC-NAME :CONSTRUCTOR :COPIER :PREDICATE)"
 "(  (& val 3) )")
(#(820022 7A03BEDF 8E8B60F0 9D81B113 D8C1EE02 FBADBE01)
 "(:NAMED :PREDICATE :COPIER :CONSTRUCTOR :CONC-NAME NIL)"
 "(  (& (- (>> val 4) (>> val 24)) 7))")
(#(6A4BF1F0 9C1CB8B3 AF040982 F0C8F231)
 "(:INVERT :PRESERVE :DOWNCASE :UPCASE)"
 "(  (& val 3) )")
(#(1DDBED60 483C9C82 609B6613 92586CF4)
 "(SB-C::INHIBIT-FLUSHING SB-C::MODIFYING FUNCTION-DESIGNATOR FUNCTION)"
 "(  (& (>> val 4) 3) )")
(#(76A22E5D BABC0674 D05C85DE D58C389F DED271A4)
 "(SB-C::PROPER-OR-CIRCULAR-LIST SB-C::PROPER-OR-DOTTED-LIST SB-C::PROPER-LIST SB-C::PROPER-SEQUENCE TYPE-SPECIFIER)"
 "(  (& (^ val (>> val 21)) 7))")
(#(2CFE05E6 4121D2EA 7C31AE8F CD22F006)
 "(:BIVALENT SIGNED-BYTE UNSIGNED-BYTE CHARACTER)"
 "(  (& (>> val 9) 3) )")
(#(820022 3E421619 42F9EC4F 52ECC4FA 53C6AF8C 546D436A D9F0FE17 E77DD8CF)
 "(NIL :SUPERSEDE :APPEND :OVERWRITE :RENAME-AND-DELETE :RENAME :NEW-VERSION :ERROR)"
 "(  (& (- (>> val 2) (>> val 18)) 7))")
(#(487A3F33 7DB72BC4 891C1715 C7977052)
 "(:PROBE :IO :OUTPUT :INPUT)"
 "(  (& val 3) )")
(#(F1759B7 9C1CB8B3 E380B278 F0C8F231)
 "(:CAPITALIZE-FIRST :CAPITALIZE :DOWNCASE :UPCASE)"
 "(  (& (>> val 18) 3) )")
(#(1B618B93 600CFD48 6FD9FFE8 782BBB07 CB2101A6)
 "(:SLOT-SET :STRUCT-SET :SVSET :RPLACD :RPLACA)"
 "(  (& (^ (>> val 4) (>> val 21)) 7))")
(#(2469FFDD 92586CF4 B7DA6CE4 D4FD9754)
 "(FUNCTION SB-C::GLOBAL-FUNCTION LAMBDA NAMED-LAMBDA)"
 "(  (& (- val (>> val 4)) 3) )")
(#(2F740446 53DC2256 8612A6FE A55DBD6F)
 "(:ESCAPE :CLEANUP :ZOMBIE :DELETED)"
 "(  (& (>> val 3) 3) )")
(#(820022 2F740446 6F4E2B12 8612A6FE CF79C550)
 "(NIL :ESCAPE :CLEANUP :OPTIONAL :ASSIGNMENT)"
 "(  (& (^ (>> val 6) (>> val 22)) 7))")
(#(12C4811C 50B431CB 834BCA78 8F6A8805 934E6A73 A1148EC6 DC4D4F5D E8DC3557)
 "(SB-C::EQUALITY EQL <= >= = > < TYPEP)"
 "(  (& (+ (>> val 1) (>> val 5)) 7))")
(#(820022 2F740446 3C28E423 7F853C99 8612A6FE CF79C550)
 "(:OPTIONAL :EXTERNAL :TOPLEVEL NIL :ESCAPE :CLEANUP)"
 "(  (& (>> val 15) 7))")
(#(32C229AB 5AAEBDB1 A16520EC A6F460C5)
 "(:COMPONENT :ENVIRONMENT :CONSTANT :UNUSED)"
 "(  (& (>> val 2) 3) )")
(#(70CB34EE 9C97CBC8 D23C57ED FF414202)
 "(SB-IMPL::|List| LIST SB-IMPL::|Vector| VECTOR)"
 "(  (& (>> val 1) 3) )")
(#(923ECA5A 965CD62A A0FAB3A5 A447FB2F)
 "(SHORT-FLOAT SINGLE-FLOAT DOUBLE-FLOAT LONG-FLOAT)"
 "(  (& (>> val 25) 3) )")
(#(4C25CEB9 7C9FDF6F 930967BF D9F0FE17 EADF4A0F)
 "(ERROR WARN STYLE-WARN SB-C:COMPILER-WARN SB-C:COMPILER-STYLE-WARN)"
 "(  (& (^ (>> val 1) (>> val 12)) 7))")
(#(50B431CB 834BCA78 8F6A8805 A1148EC6)
 "(< <= > >=)"
 "(  (& val 3) )")
(#(701EC480 772926CF 7AF3914D E6101645 EDB26522)
 "(RASSOC ASSOC MEMBER POSITION FIND)"
 "(  (& (+ val (>> val 29)) 7))")
(#(3CEB35C3 6C16ABD3 8D437217 E8DC3557)
 "(EQL EQ CHAR= CHAR-EQUAL)"
 "(  (>> val 30) )")
(#(820022 3C28E423 7F853C99 8612A6FE CF79C550)
 "(NIL :EXTERNAL :OPTIONAL :TOPLEVEL :CLEANUP)"
 "(  (& (^ (>> val 5) (>> val 9)) 7))")
(#(FFEC5B5 7BBEAE7B B31D0A7A E66299E9)
 "(:UNSAFE-DEFAULT :SAFE-DEFAULT :UNBOUND :TRAP)"
 "(  (>> val 30) )")
(#(313790D2 4B430390 519DD3CE 640E844C 8CD5B89F A09FC47B)
 "(SB-C:RETURN-SINGLE RETURN SB-C:KNOWN-RETURN SB-C:TAIL-CALL SB-C:TAIL-CALL-NAMED SB-C:STATIC-TAIL-CALL-NAMED)"
 "(  (& (+ (>> val 8) (>> val 13)) 7))")
(#(3244ACF4 36C411CF 64120058 EF222200)
 "(:NFKC :NFC :NFKD :NFD)"
 "(  (& (>> val 2) 3) )")
(#(820022 B414EE0 3B3832EC A256D8C6 E3479BD2)
 "(:KEY-OR-VALUE :KEY-AND-VALUE :VALUE :KEY NIL)"
 "(  (& (- (>> val 3) (>> val 12)) 7))")
(#(820022 C07E71ED E022967D E41ED3F1)
 "(NIL :STRINGS :BOTH :SYMBOLS)"
 "(  (& (>> val 3) 3) )")
(#(42FC2E2E 6228BBC6 D3EA690E DE2EACD2 F709D62D)
 "(:MANDATORY :LITERAL :MISER :FILL :LINEAR)"
 "(  (& (^ (>> val 1) (>> val 22)) 7))")
(#(42FC2E2E 6228BBC6 D3EA690E F709D62D)
 "(:MANDATORY :MISER :FILL :LINEAR)"
 "(  (& (>> val 14) 3) )")
(#(FA27DCE 6B6ACBC6 7DBFABF9 A8694C40)
 "(:SECTION-RELATIVE :LINE-RELATIVE :SECTION :LINE)"
 "(  (& (>> val 2) 3) )")
(#(820022 90EDB7B 1FDE90F6 25164A63 50F5AB12 B800E558 C3EABF48)
 "(:VERSION :TYPE :NAME :DIRECTORY :DEVICE :HOST NIL)"
 "(  (& (>> val 12) 7))")
(#(15432F17 4C25CEB9 D9F0FE17 F49146D7)
 "(:FORCE :ERROR :WARN :PUNT)"
 "(  (& (>> val 20) 3) )")
(#(6C749137 A4C23C90 CEE63FE3 DC8541EA)
 "(:UNKNOWN-RETURN-PARTNER :FUN-END :FUN-START :CODE-LOCATION)"
 "(  (& (^ val (>> val 6)) 3) )")
(#(54FC85B 17D252E7 377D1CA8 519DD3CE 6E2BAD2D 7614C426 B854947D BDE3EA38 D52CECC7)
 "(:UNPARSED :NON-LOCAL-ENTRY :SINGLE-VALUE-RETURN :CALL-SITE :BLOCK-START :NON-LOCAL-EXIT :INTERNAL-ERROR :KNOWN-RETURN :UNKNOWN-RETURN)"
 "((let ((tab #a((8) (unsigned-byte 8) 0 0 14 0 0 4 5 0)))
  (let ((b (>> val 29)))
   (let ((a (& val #x7)))
    (^ a (aref tab b))))))")
(#(61131DA 7448084F CE38123D CE82A46E)
 "(SB-PCL::%CLASS SB-PCL::%PARAMETER SB-PCL::%VARIABLE-REBINDING SPECIAL)"
 "(  (& (>> val 4) 3) )")
(#(95B7F751 95EB707D E4E46523 E8DC3557)
 "(CLASS SB-PCL::PROTOTYPE SB-PCL::CLASS-EQ EQL)"
 "(  (& (>> val 1) 3) )")
(#(AA421F8 389F67F6 B3F4A1A1 D692DDF5 F5EA1D35)
 "(HASH-TABLE PACKAGE PATHNAME RANDOM-STATE READTABLE)"
 "(  (& (^ val (>> val 17)) 7))")
(#(1694A6AB 32C229AB 7D21904E BD918462)
 "((SB-VM::DESCRIPTOR-REG . 0) (SB-VM::ANY-REG . 1) (SB-VM::SIGNED-REG . 2) (CONSTANT . 3))"
 "(  (& (+ val (>> val 10)) 3) )")
(#(39308E0 D2F362D 1D8EA6A4 2C55EAF7 45334DC4 5D03F722 6EA0F9D1 7C685E1B B38BE789 BA6C5CD5 D36BD4C8 D70B59A6 F5B3D6E9)
 "((:UNPARSE . SB-ALIEN::ALIEN-TYPE-CLASS-UNPARSE) (:TYPE= . SB-ALIEN::ALIEN-TYPE-CLASS-TYPE=) (:SUBTYPEP . SB-ALIEN::ALIEN-TYPE-CLASS-SUBTYPEP) (:LISP-REP . SB-ALIEN::ALIEN-TYPE-CLASS-LISP-REP) (:ALIEN-REP . SB-ALIEN::ALIEN-TYPE-CLASS-ALIEN-REP) (:EXTRACT-GEN . SB-ALIEN::ALIEN-TYPE-CLASS-EXTRACT-GEN) (:DEPOSIT-GEN . SB-ALIEN::ALIEN-TYPE-CLASS-DEPOSIT-GEN) (:NATURALIZE-GEN . SB-ALIEN::ALIEN-TYPE-CLASS-NATURALIZE-GEN) (:DEPORT-GEN . SB-ALIEN::ALIEN-TYPE-CLASS-DEPORT-GEN) (:DEPORT-ALLOC-GEN . SB-ALIEN::ALIEN-TYPE-CLASS-DEPORT-ALLOC-GEN) (:DEPORT-PIN-P . SB-ALIEN::ALIEN-TYPE-CLASS-DEPORT-PIN-P) (:ARG-TN . SB-ALIEN::ALIEN-TYPE-CLASS-ARG-TN) (:RESULT-TN . SB-ALIEN::ALIEN-TYPE-CLASS-RESULT-TN))"
 "((let ((tab #a((8) (unsigned-byte 8) 0 0 0 8 8 12 2 0)))
  (let ((b (& val #x7)))
   (let ((a (>> val 29)))
    (^ a (aref tab b))))))")
(#(5CB06058 6187CF81 A87D60AD B3592CF8 C31499A5)
 "((:UNDERFLOW . 4) (:OVERFLOW . 8) (:INEXACT . 1) (:INVALID . 16) (:DIVIDE-BY-ZERO . 2))"
 "(  (& (- val (>> val 11)) 7))")
(#(87C7B06 130E0A01 47AA1C83 7C2C9DA2)
 "((:NEAREST . 0) (:ZERO . 1) (:POSITIVE-INFINITY . 2) (:NEGATIVE-INFINITY . 3))"
 "(  (& (>> val 7) 3) )")
(#(326AE117 3363AA2A 37A4B163 4A1B4A55 4EE1CF40 6C16ABD3 76A78344 8EE6F3D9 A3E81550 C8A25DB2 D6D8A870 DCF9423A F4569369
   FCF00468)
 "((:T . 31) (:LT . 16) (:LE . 20) (:EQ . 4) (:LNG . 6) (:GE . 12) (:NE . 24) (:NG . 20) (:LLT . 2) (:F . 0) (:LLE . 6) (:LGE . 5) (:LGT . 1) (:LNL . 5))"
 "((let ((tab #a((8) (unsigned-byte 8) 3 13 0 11 12 15 0 0)))
  (let ((b (& (>> val 10) #x7)))
   (let ((a (>> (<< val 5) 29)))
    (^ a (aref tab b))))))")
(#(820022 6F4E2B12 8612A6FE CF79C550)
 "(NIL :ASSIGNMENT :OPTIONAL :CLEANUP)"
 "(  (>> val 30) )")
(#(50EDFBF1 6C16ABD3 934E6A73 AC25889A E8DC3557)
 "(EQ EQL EQUAL EQUALP =)"
 "(  (& (- (>> val 7) (>> val 18)) 7))")
(#(50EDFBF1 934E6A73 AC25889A E8DC3557)
 "(= EQL EQUAL EQUALP)"
 "(  (& (>> val 7) 3) )")
)
;; EOF
