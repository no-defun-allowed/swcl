(
(#(89300F3 9617841 C79EB29 12C17919 135DD198 1CA9D6F3)
 "#(COMPILATION-SPEED DEBUG SAFETY SPACE SPEED INHIBIT-WARNINGS)"
 "(  (& (+ (>> val 13) (>> val 24)) 7))")
(#(21FDBD3 11E3A7FE 19C62B17 1C5C0C65)
 "#(EQ EQL EQUAL EQUALP)"
 "(  (& (+ val (>> val 1)) 3) )")
(#(7B1BC0A 7B9838C BE582CA DBBEDB4 1005EBBD 18CAB5D4 19D9054E 1AF7EA47 1CD0763E 1D29720E 1FA2DCD1 1FBACEDB 1FF49812)
 "#(:REQUIRED &OPTIONAL &REST &MORE &KEY &AUX &ENVIRONMENT &WHOLE &ALLOW-OTHER-KEYS &BODY :POST-ENV :POST-REST :POST-MORE)"
 "((let ((tab #a((8) (unsigned-byte 8) 0 13 0 12 3 1 0 12)))
  (let ((b (& (>> val 12) #x7)))
   (let ((a (>> (<< val 5) 29)))
    (^ a (aref tab b))))))")
(#(242EF8B 55170EB 73FB831 7B255E2 85FCC7A FBD14B3 1025CF34 151C1A4B 163BF755 17F4DBAA 1B12559D 1C900CEB 1CB7AFC2 1CE6A754
   1D53039B 1E9F8F78)
 "#(SB-ALIEN::ROOT INTEGER BOOLEAN ENUM FLOAT SINGLE-FLOAT DOUBLE-FLOAT SYSTEM-AREA-POINTER ALIEN-VALUE SB-ALIEN::POINTER SB-ALIEN::MEM-BLOCK ARRAY SB-ALIEN::RECORD SB-ALIEN::FUN VALUES C-STRING)"
 "((let ((tab #a((8) (unsigned-byte 8) 12 8 12 12 4 5 8 0)))
  (let ((b (& (>> val 16) #x7)))
   (let ((a (>> (<< val 5) 29)))
    (^ a (aref tab b))))))")
(#(7365E7 69C369F 73FB831 C8CC2CF EABD7E9 1025CF34 148BEB42 191366AE 1CE6A754)
 "#(FIXNUM SINGLE-FLOAT DOUBLE-FLOAT INTEGER SB-VM:SIGNED-WORD WORD BIGNUM COMPLEX RATIO)"
 "((let ((tab #a((8) (unsigned-byte 8) 4 0 0 5 12 4 3 4)))
  (let ((b (>> (<< val 3) 29)))
   (let ((a (& val #x7)))
    (^ a (aref tab b))))))")
(#(4A3C52B 4DA3334 86EB1F4 A464254 DB99C7F 14915FC4 15878D53 1BB5BFF6 1EDFF300)
 "#(:INCLUDE :INITIAL-OFFSET :PURE :TYPE :CONC-NAME :COPIER :PREDICATE :PRINT-FUNCTION :PRINT-OBJECT)"
 "((let ((tab #a((8) (unsigned-byte 8) 12 0 0 2 3 7 5 6)))
  (let ((b (& (>> val 18) #x7)))
   (let ((a (>> (<< val 31) 29)))
    (^ a (aref tab b))))))")
(#(FDC1A4 2A52D0C 4B25CD9 8854C0F ACA92C6 DC571BB 10294987 10DF3BE4 1209C54D 13965BF7 14348698 157A6A3D 1C2E380B 1DEAED54
   1F859AC5)
 "#(:ASSEMBLY-ROUTINE :ASSEMBLY-ROUTINE* :CARD-TABLE-INDEX-MASK :SYMBOL-TLS-INDEX :ALIEN-CODE-LINKAGE-INDEX :ALIEN-DATA-LINKAGE-INDEX :FOREIGN :FOREIGN-DATAREF :CODE-OBJECT :LAYOUT :IMMOBILE-SYMBOL :FDEFN-CALL :STATIC-CALL :SYMBOL-VALUE :LAYOUT-ID)"
 "((let ((tab #a((8) (unsigned-byte 8) 0 4 8 0 3 12 12 5)))
  (let ((b (& (>> val 5) #x7)))
   (let ((a (>> (<< val 5) 29)))
    (^ a (aref tab b))))))")
(#(2052FE6 A2474C7 13A8C7A6 144A0FDD 1749A4BA)
 "#(:BINDS :CALLS :SETS :REFERENCES :MACROEXPANDS)"
 "(  (& (>> val 15) 7))")
(#(14EE526 79479D7 8E8A73F 17A76ECC 1ACB3CFC 1B6AC618 1E52DC8F 1EB34BA6)
 "#(:UNKNOWN-RETURN :KNOWN-RETURN :INTERNAL-ERROR :NON-LOCAL-EXIT :BLOCK-START :CALL-SITE :SINGLE-VALUE-RETURN :NON-LOCAL-ENTRY)"
 "(  (& (- val (>> val 23)) 7))")
(#(B1B342 2696F55 27E4E79 34001B1 35C8E17 3CC42AC 4BB7808 5502DD7 625B2E0 70F5EF0 8E1655F 8FFB29F 997C7FE 9D14A2B A8542A3
   B0580F9 BE9B4CB C042E4D FB43EC2 10D39C38 114F77D4 116E414E 11AD100A 12B50090 13B30D76 14287725 159AB905 17AAEED6 17BE5DB2
   17D87E68 183A215C 1A66777D 1B303D41 1EFFF46E 1F125097)
 "#(T *FREE-INTERRUPT-CONTEXT-INDEX* *ALLOW-WITH-INTERRUPTS* *INTERRUPTS-ENABLED* *INTERRUPT-PENDING* *IN-WITHOUT-GCING* *GC-INHIBIT* *GC-PENDING* SB-IMPL::*UNWEAKENED-VECTORS* SB-VM::*PINNED-OBJECTS* *GC-PIN-CODE-PAGES* SB-VM:*CURRENT-CATCH-BLOCK* SB-VM::*CURRENT-UNWIND-PROTECT-BLOCK* SB-VM::*IMMOBILE-CODEBLOB-TREE* SB-VM::*IMMOBILE-CODEBLOB-VECTOR* SB-VM::*DYNSPACE-CODEBLOB-TREE* SB-IMPL::**FINALIZER-STORE** SB-IMPL::*FINALIZER-REHASHLIST* SB-IMPL::*FINALIZERS-TRIGGERED* SB-VM:*BINDING-STACK-START* SB-VM:*CONTROL-STACK-START* SB-VM:*CONTROL-STACK-END* *STEPPING* SB-VM::*FREE-TLS-INDEX* SB-VM::+REQUIRED-FOREIGN-SYMBOLS+ *GC-EPOCH* %%DATA-VECTOR-REFFERS%% SB-VM::%%DATA-VECTOR-REFFERS/CHECK-BOUNDS%% %%DATA-VECTOR-SETTERS%% SB-VM::%%DATA-VECTOR-SETTERS/CHECK-BOUNDS%% SB-VM::*CONTROL-STACK-POINTER* SB-VM::*BINDING-STACK-POINTER* SB-VM::*INTERRUPTED-CONTROL-STACK-POINTER* SB-VM::*PSEUDO-ATOMIC-ATOMIC* SB-VM::*PSEUDO-ATOMIC-INTERRUPTED*)"
 "((let ((tab #a((32) (unsigned-byte 8) 0 16 0 0 0 0 0 0 0 0 9 9 9 19 0 0 19 9 46 0 19 11 9 0 19 10 0 0 46 59 29 16)))
  (let ((b (& val #x1f)))
   (let ((a (>> (<< val 9) 27)))
    (^ a (aref tab b))))))")
(#(B17EA B621A 765909 CA4AAA 2740F12 2DCA563 3338509 4838F98 5408EC3 54FE9F6 620099A AA84B76 BFFC3D4 D514142 DC65EEE E5D1897
   EDFD052 FA21765 10E2FDD1 11191CE8 1278BFE6 13632D1F 13FFF4F3 1451524B 169E1DF6 16AAD643 1712EA5F 17A76ECC 1806A438 187CC43D
   18AD9421 19C62B17 1ABE4E69 1BBA8D9F 1C5C0C65 1CDF5674 1D7BD61D 1DC4409C 1F038512 1F354480 1F7C3062)
 "#(SUB-GC POST-GC INTERNAL-ERROR CONTROL-STACK-EXHAUSTED-ERROR BINDING-STACK-EXHAUSTED-ERROR ALIEN-STACK-EXHAUSTED-ERROR HEAP-EXHAUSTED-ERROR UNDEFINED-ALIEN-VARIABLE-ERROR MEMORY-FAULT-ERROR UNHANDLED-TRAP-ERROR SB-DI::HANDLE-BREAKPOINT SB-DI::HANDLE-SINGLE-STEP-TRAP ENTER-ALIEN-CALLBACK TWO-ARG-+ TWO-ARG-- TWO-ARG-* TWO-ARG-/ TWO-ARG-< TWO-ARG-> TWO-ARG-= EQL %NEGATE LENGTH ERROR FORMAT EQUALP SB-C::CHECK-DS-LIST SB-C::CHECK-DS-LIST/&REST WRITE-STRING WRITE-CHAR PRINC HAIRY-DATA-VECTOR-SET HAIRY-DATA-VECTOR-REF VECTOR-HAIRY-DATA-VECTOR-SET VECTOR-HAIRY-DATA-VECTOR-REF HAIRY-DATA-VECTOR-SET/CHECK-BOUNDS HAIRY-DATA-VECTOR-REF/CHECK-BOUNDS VECTOR-HAIRY-DATA-VECTOR-SET/CHECK-BOUNDS VECTOR-HAIRY-DATA-VECTOR-REF/CHECK-BOUNDS %LDB VECTOR-UNSIGNED-BYTE-8-P)"
 "((let ((tab #a((32) (unsigned-byte 8) 46 46 7 0 0 19 7 0 0 0 0 60 28 0 7 0 0 7 9 26 31 0 9 51 33 0 9 0 13 57 0 9)))
  (let ((b (& val #x1f)))
   (let ((a (>> (<< val 9) 27)))
    (^ a (aref tab b))))))")
(#(9B11FFC A49908C 168DD0E4 18133997 1E42AD12)
 "#(:ABSOLUTE :JMP :LUI :ADDI :SLL-SA)"
 "(  (& (- (>> val 2) (>> val 19)) 7))")
(#(B1B342 2696F55 27E4E79 34001B1 3CC42AC 4BB7808 5502DD7 625B2E0 70F5EF0 8E1655F 8FFB29F 9D14A2B A8542A3 B0580F9 BE9B4CB
   C042E4D FB43EC2 10D39C38 114F77D4 116E414E 11AD100A 12B50090 13B30D76 14287725 159AB905 17AAEED6 17BE5DB2 17D87E68 183A215C
   1A66777D 1EFFF46E 1F125097)
 "#(T *FREE-INTERRUPT-CONTEXT-INDEX* *ALLOW-WITH-INTERRUPTS* *INTERRUPTS-ENABLED* *INTERRUPT-PENDING* *IN-WITHOUT-GCING* *GC-INHIBIT* *GC-PENDING* SB-IMPL::*UNWEAKENED-VECTORS* SB-VM::*PINNED-OBJECTS* *GC-PIN-CODE-PAGES* SB-VM:*CURRENT-CATCH-BLOCK* SB-VM::*CURRENT-UNWIND-PROTECT-BLOCK* SB-VM::*IMMOBILE-CODEBLOB-TREE* SB-VM::*IMMOBILE-CODEBLOB-VECTOR* SB-VM::*DYNSPACE-CODEBLOB-TREE* SB-IMPL::**FINALIZER-STORE** SB-IMPL::*FINALIZER-REHASHLIST* SB-IMPL::*FINALIZERS-TRIGGERED* SB-VM:*BINDING-STACK-START* SB-VM:*CONTROL-STACK-START* SB-VM:*CONTROL-STACK-END* *STEPPING* SB-VM::*FREE-TLS-INDEX* SB-VM::+REQUIRED-FOREIGN-SYMBOLS+ *GC-EPOCH* %%DATA-VECTOR-REFFERS%% SB-VM::%%DATA-VECTOR-REFFERS/CHECK-BOUNDS%% %%DATA-VECTOR-SETTERS%% SB-VM::%%DATA-VECTOR-SETTERS/CHECK-BOUNDS%% SB-VM::*PSEUDO-ATOMIC-ATOMIC* SB-VM::*PSEUDO-ATOMIC-INTERRUPTED*)"
 "((let ((tab #a((16) (unsigned-byte 8) 31 7 16 31 31 14 0 31 7 31 23 0 19 21 1 21)))
  (let ((b (& (>> val 11) #xf)))
   (let ((a (>> (<< val 7) 28)))
    (^ a (aref tab b))))))")
(#(B17EA B621A 765909 CA4AAA 261EC99 2740F12 2DCA563 3338509 4838F98 5408EC3 54FE9F6 620099A AA84B76 BFFC3D4 D514142 DC65EEE
   E5D1897 EDFD052 FA21765 10E2FDD1 11191CE8 1278BFE6 13632D1F 13FFF4F3 1451524B 14E1C5FA 169E1DF6 16AAD643 1712EA5F 17A76ECC
   1806A438 187CC43D 18AD9421 1954FEBE 19C62B17 1ABE4E69 1BBA8D9F 1C2CB18E 1C5C0C65 1CDF5674 1D7BD61D 1DC4409C 1F038512
   1F354480 1F7C3062)
 "#(SUB-GC POST-GC INTERNAL-ERROR CONTROL-STACK-EXHAUSTED-ERROR BINDING-STACK-EXHAUSTED-ERROR ALIEN-STACK-EXHAUSTED-ERROR HEAP-EXHAUSTED-ERROR UNDEFINED-ALIEN-VARIABLE-ERROR MEMORY-FAULT-ERROR UNHANDLED-TRAP-ERROR UNDEFINED-ALIEN-FUN-ERROR SB-DI::HANDLE-BREAKPOINT SB-DI::HANDLE-SINGLE-STEP-TRAP ENTER-ALIEN-CALLBACK TWO-ARG-<= TWO-ARG->= TWO-ARG-/= TWO-ARG-+ TWO-ARG-- TWO-ARG-* TWO-ARG-/ TWO-ARG-< TWO-ARG-> TWO-ARG-= EQL %NEGATE LENGTH ERROR FORMAT EQUALP SB-C::CHECK-DS-LIST SB-C::CHECK-DS-LIST/&REST WRITE-STRING WRITE-CHAR PRINC HAIRY-DATA-VECTOR-SET HAIRY-DATA-VECTOR-REF VECTOR-HAIRY-DATA-VECTOR-SET VECTOR-HAIRY-DATA-VECTOR-REF HAIRY-DATA-VECTOR-SET/CHECK-BOUNDS HAIRY-DATA-VECTOR-REF/CHECK-BOUNDS VECTOR-HAIRY-DATA-VECTOR-SET/CHECK-BOUNDS VECTOR-HAIRY-DATA-VECTOR-REF/CHECK-BOUNDS %LDB VECTOR-UNSIGNED-BYTE-8-P)"
 "((let ((tab #a((32) (unsigned-byte 8) 36 0 51 0 0 19 7 0 16 0 7 49 34 0 13 0 0 7 9 60 61 0 9 49 0 60 0 0 57 12 52 9)))
  (let ((b (& val #x1f)))
   (let ((a (>> (<< val 9) 27)))
    (^ a (aref tab b))))))")
(#(1F785B9 200C7F2 21FDBD3 3B21353 873F229 C7FAA2A CA7DAB8 E10AFA2 F1DECBA 100091B0 11D7A066 155C0369 1845C03F 1A3F05CB
   1DF3D23A 1E4F5E55)
 "#(:F :UN :EQ :UEQ :OLT :ULT :OLE :ULE :SF :NGLE :SEQ :NGL :LT :NGE :LE :NGT)"
 "((let ((tab #a((8) (unsigned-byte 8) 11 12 0 15 9 5 4 0)))
  (+= val #x3db844c3)
  (^= val (>> val 16))
  (+= val (<< val 8))
  (^= val (>> val 4))
  (let ((b (& (>> val 4) #x7)))
   (let ((a (>> val 29)))
    (^ a (aref tab b))))))")
(#(69CB71D F56E488 106B9AF3 1234DE4D)
 "#(+ - * /)"
 "(  (& (>> val 6) 3) )")
(#(10DF3586 11202785 12484468 14D3B353 153AECDC 1589BF4C 15F1FBBE 161C2E73 175AB3B2 17CBC4AC 187C8815 1A243FF4 1ACAB3EB
   1B47DA92 1E381306 1F4EF588)
 "#(((:TYPE VALUES-TYPE)) ((:TYPE FUN-DESIGNATOR-TYPE) (:TYPE FUN-TYPE)) ((:TYPE NUMERIC-TYPE)) ((:TYPE UNION-TYPE) (:TYPE INTERSECTION-TYPE) (:TYPE COMPOUND-TYPE)) ((:TYPE MEMBER-TYPE)) ((:TYPE ARRAY-TYPE)) ((:TYPE UNKNOWN-TYPE) (:TYPE HAIRY-TYPE)) ((:TYPE NEGATION-TYPE)) ((:TYPE CONSTANT-TYPE)) ((:TYPE CONS-TYPE)) ((:TYPE CHARACTER-SET-TYPE)) ((:TYPE ALIEN-TYPE-TYPE)))"
 "((let ((tab #a((8) (unsigned-byte 8) 0 0 0 0 12 13 7 13)))
  (let ((b (& (>> val 8) #x7)))
   (let ((a (>> (<< val 5) 29)))
    (^ a (aref tab b))))))")
(#(10DF3586 11202785 12484468 14D3B353 1589BF4C 15F1FBBE 161C2E73 17CBC4AC 187C8815 1A243FF4 1ACAB3EB 1B47DA92 1D21B1C3
   1E381306 1F4EF588)
 "#(((:TYPE UNKNOWN-TYPE) (:TYPE HAIRY-TYPE) (:TYPE CHARACTER-SET-TYPE) (:TYPE MEMBER-TYPE) (:TYPE NUMERIC-TYPE)) ((:TYPE VALUES-TYPE) (:TYPE FUN-TYPE) (:TYPE FUN-DESIGNATOR-TYPE) (:TYPE ARGS-TYPE)) ((:TYPE CONS-TYPE)) ((:TYPE ARRAY-TYPE)) ((:TYPE UNION-TYPE) (:TYPE INTERSECTION-TYPE) (:TYPE COMPOUND-TYPE)) ((:TYPE NEGATION-TYPE)))"
 "((let ((tab #a((8) (unsigned-byte 8) 0 0 13 0 8 0 14 0)))
  (let ((b (& val #x7)))
   (let ((a (>> (<< val 4) 29)))
    (^ a (aref tab b))))))")
(#(100E0FE9 125AD49B 1509A993 153D181F 158DFB7E 15AB3177 16E38FD9 173F8468 17AB122D 193CB57F 19AD6047 1A4E189D 1C875938
   1C87E668 1F71626C)
 "#(((:TYPE ALIEN-BOOLEAN-TYPE) (:TYPE ALIEN-ENUM-TYPE) (:TYPE ALIEN-INTEGER-TYPE)) ((:TYPE ALIEN-SINGLE-FLOAT-TYPE) (:TYPE ALIEN-DOUBLE-FLOAT-TYPE) (:TYPE ALIEN-FLOAT-TYPE)) ((:TYPE ALIEN-RECORD-TYPE)) ((:TYPE ALIEN-ARRAY-TYPE)) ((:TYPE SB-ALIEN::ALIEN-C-STRING-TYPE)) ((:TYPE ALIEN-POINTER-TYPE)) ((:TYPE ALIEN-FUN-TYPE)) ((:TYPE SB-ALIEN::ALIEN-ALIEN-VALUE-TYPE) (:TYPE SB-ALIEN::ALIEN-MEM-BLOCK-TYPE) (:TYPE SB-ALIEN::ALIEN-SYSTEM-AREA-POINTER-TYPE)) ((:TYPE ALIEN-VALUES-TYPE)))"
 "((let ((tab #a((8) (unsigned-byte 8) 0 0 14 0 12 4 15 6)))
  (let ((b (& (>> val 11) #x7)))
   (let ((a (>> (<< val 5) 29)))
    (^ a (aref tab b))))))")
(#(10DF3586 12484468 14D3B353 153AECDC 161C2E73 187C8815 1ACAB3EB 1B47DA92 1D21B1C3 1E381306 1F4EF588)
 "#(((:TYPE UNION-TYPE) (:TYPE INTERSECTION-TYPE) (:TYPE COMPOUND-TYPE)) ((:TYPE NEGATION-TYPE)) ((:TYPE CONS-TYPE)) ((:TYPE ARRAY-TYPE)) ((:TYPE CONSTANT-TYPE)) ((:TYPE VALUES-TYPE) (:TYPE FUN-TYPE) (:TYPE FUN-DESIGNATOR-TYPE) (:TYPE ARGS-TYPE)))"
 "((let ((tab #a((8) (unsigned-byte 8) 12 5 0 4 4 11 1 0)))
  (let ((b (>> (<< val 4) 29)))
   (let ((a (& val #x7)))
    (^ a (aref tab b))))))")
(#(10DF3586 11202785 1127E4A2 1242E9DE 12484468 141A7AF3 14C0332A 14D3B353 1535BEDE 153AECDC 1589BF4C 15F1FBBE 161C2E73
   175AB3B2 17CBC4AC 1838C94A 187C8815 1A243FF4 1ACAB3EB 1B47DA92 1D21B1C3 1E0A0612 1E381306 1EEA7428 1F4EF588 1F7E1134)
 "#(((:TYPE NUMERIC-TYPE)) ((:TYPE ARRAY-TYPE)) ((:TYPE UNION-TYPE)) ((:TYPE INTERSECTION-TYPE)) ((:TYPE MEMBER-TYPE)) ((:TYPE NAMED-TYPE)) ((:TYPE CHARACTER-SET-TYPE)) ((:TYPE CONS-TYPE)) ((:TYPE BUILT-IN-CLASSOID)) ((:TYPE FUN-DESIGNATOR-TYPE)) ((:TYPE FUN-TYPE)) ((:TYPE UNDEFINED-CLASSOID) (:TYPE CONDITION-CLASSOID) (:TYPE STRUCTURE-CLASSOID) (:TYPE STANDARD-CLASSOID) (:TYPE STATIC-CLASSOID) (:TYPE CLASSOID)) ((:TYPE CONSTANT-TYPE) (:TYPE VALUES-TYPE) (:TYPE ARGS-TYPE) (:TYPE UNKNOWN-TYPE) (:TYPE NEGATION-TYPE) (:TYPE ALIEN-TYPE-TYPE) (:TYPE HAIRY-TYPE) (:TYPE COMPOUND-TYPE) (:TYPE CTYPE)))"
 "((let ((tab #a((16) (unsigned-byte 8) 0 21 15 31 11 16 31 7 16 18 18 13 13 14 0 21)))
  (let ((b (& (>> val 6) #xf)))
   (let ((a (>> (<< val 7) 28)))
    (^ a (aref tab b))))))")
(#(37B65B9 4ED15A0 524389C A49908C 13965BF7 17389CA2)
 "#(:ABSOLUTE :LAYOUT-ID :B :BA :HA :L)"
 "(  (& (+ (>> val 7) (>> val 20)) 7))")
(#(11F408CD 132E6150 13D6F91D 13F99856 143C4289 14F00D49 15C68E29 16A102A7 17F587AA 19A622BB 1B45E924 1C2EDDD1 1CE8558C
   1D5E7DE2 1FDEDBDB)
 "#(((:TYPE SB-C::CDYNAMIC-EXTENT) (:TYPE SB-C::COMBINATION) (:TYPE SB-C::ENCLOSE) (:TYPE EXIT) (:TYPE DELAY) (:TYPE SB-C::BOUND-CAST) (:TYPE SB-C::ARRAY-INDEX-CAST) (:TYPE CAST) (:TYPE SB-C::MV-COMBINATION) (:TYPE SB-C::ENTRY) (:TYPE SB-C::CIF) (:TYPE SB-C::CRETURN)) ((:TYPE SB-C::REF)) ((:TYPE SB-C::CSET)) ((:TYPE BIND)))"
 "((let ((tab #a((8) (unsigned-byte 8) 4 0 13 8 5 0 12 0)))
  (let ((b (& (>> val 17) #x7)))
   (let ((a (>> (<< val 5) 29)))
    (^ a (aref tab b))))))")
(#(132E6150 13D6F91D 13F99856 143C4289 14F00D49 15C68E29 16A102A7 17F587AA 19A622BB 1B45E924 1C2EDDD1 1DF948BE 1FDEDBDB)
 "#(((:TYPE BIND) (:TYPE SB-C::REF)) ((:TYPE SB-C::CIF)) ((:TYPE SB-C::CSET)) ((:TYPE SB-C::CRETURN)) ((:TYPE EXIT)) ((:TYPE SB-C::COMBINATION) (:TYPE SB-C::MV-COMBINATION) (:TYPE SB-C::BASIC-COMBINATION)) ((:TYPE DELAY) (:TYPE SB-C::BOUND-CAST) (:TYPE SB-C::ARRAY-INDEX-CAST) (:TYPE CAST)))"
 "((let ((tab #a((8) (unsigned-byte 8) 4 5 12 0 12 14 15 1)))
  (let ((b (& (>> val 14) #x7)))
   (let ((a (>> (<< val 5) 29)))
    (^ a (aref tab b))))))")
(#(11F408CD 132E6150 13D6F91D 13F99856 143C4289 14F00D49 15C68E29 16A102A7 17F587AA 19A622BB 1B45E924 1C2EDDD1 1CE8558C
   1D5E7DE2 1DF948BE 1FDEDBDB)
 "#(((:TYPE SB-C::REF)) ((:TYPE SB-C::CIF)) ((:TYPE SB-C::COMBINATION) (:TYPE SB-C::MV-COMBINATION) (:TYPE SB-C::BASIC-COMBINATION)) ((:TYPE BIND)) ((:TYPE EXIT)) ((:TYPE SB-C::ENTRY)) ((:TYPE SB-C::CRETURN)) ((:TYPE SB-C::CSET)) ((:TYPE DELAY) (:TYPE SB-C::BOUND-CAST) (:TYPE SB-C::ARRAY-INDEX-CAST) (:TYPE CAST)) ((:TYPE SB-C::ENCLOSE)) ((:TYPE SB-C::CDYNAMIC-EXTENT)))"
 "((let ((tab #a((8) (unsigned-byte 8) 0 0 8 4 10 12 7 13)))
  (let ((b (& (>> val 18) #x7)))
   (let ((a (>> (<< val 5) 29)))
    (^ a (aref tab b))))))")
(#(132E6150 13D6F91D 13F99856 143C4289 14F00D49 15C68E29 16A102A7 19A622BB 1B45E924 1C2EDDD1 1FDEDBDB)
 "#(((:TYPE SB-C::REF)) ((:TYPE SB-C::COMBINATION)) ((:TYPE SB-C::CIF)) ((:TYPE SB-C::CRETURN)) ((:TYPE SB-C::MV-COMBINATION)) ((:TYPE EXIT)) ((:TYPE SB-C::CSET)) ((:TYPE DELAY) (:TYPE SB-C::BOUND-CAST) (:TYPE SB-C::ARRAY-INDEX-CAST) (:TYPE CAST)))"
 "((let ((tab #a((8) (unsigned-byte 8) 4 5 12 0 12 0 11 1)))
  (let ((b (& (>> val 14) #x7)))
   (let ((a (>> (<< val 5) 29)))
    (^ a (aref tab b))))))")
(#(132E6150 13D6F91D 143C4289 14F00D49 16A102A7 19A622BB 1B45E924 1C2EDDD1 1FDEDBDB)
 "#(((:TYPE SB-C::REF)) ((:TYPE SB-C::COMBINATION)) ((:TYPE SB-C::MV-COMBINATION)) ((:TYPE EXIT)) ((:TYPE SB-C::CSET)) ((:TYPE DELAY) (:TYPE SB-C::BOUND-CAST) (:TYPE SB-C::ARRAY-INDEX-CAST) (:TYPE CAST)))"
 "((let ((tab #a((8) (unsigned-byte 8) 12 5 3 0 6 0 0 0)))
  (let ((b (& (>> val 4) #x7)))
   (let ((a (>> (<< val 5) 29)))
    (^ a (aref tab b))))))")
(#(1413723C 14649E4B 177496E1 1D1DA96C 1D9E8454 1EA0F6A5 1F5BB9C8)
 "#(((:TYPE SB-C::CLAMBDA) (:TYPE SB-C::OPTIONAL-DISPATCH) (:TYPE SB-C::FUNCTIONAL) (:TYPE CONSTANT)) ((:TYPE SB-C::LAMBDA-VAR)) ((:TYPE SB-C::DEFINED-FUN)) ((:TYPE SB-C::GLOBAL-VAR)))"
 "(  (& (+ (>> val 2) (>> val 16)) 7))")
(#(132E6150 143C4289 16A102A7 17F587AA 19A622BB 1B45E924 1C2EDDD1 1FDEDBDB)
 "#(((:TYPE BIND)) ((:TYPE SB-C::REF)) ((:TYPE DELAY) (:TYPE SB-C::BOUND-CAST) (:TYPE SB-C::ARRAY-INDEX-CAST) (:TYPE CAST)) ((:TYPE SB-C::CSET)) ((:TYPE SB-C::COMBINATION)))"
 "(  (& (+ (>> val 9) (>> val 16)) 7))")
(#(34001B1 3CC42AC 4BB7808 8E1655F 8FFB29F A8542A3 B0580F9 BE9B4CB FB43EC2 116E414E 11AD100A 12B50090 13E80875 17BE5DB2
   17D87E68 1A66777D 1F125097)
 "#(T SB-VM:*CURRENT-CATCH-BLOCK* SB-VM::*CURRENT-UNWIND-PROTECT-BLOCK* SB-VM::*IMMOBILE-CODEBLOB-TREE* SB-VM::*IMMOBILE-CODEBLOB-VECTOR* SB-VM::*DYNSPACE-CODEBLOB-TREE* SB-IMPL::**FINALIZER-STORE** SB-IMPL::*FINALIZER-REHASHLIST* SB-IMPL::*FINALIZERS-TRIGGERED* SB-THREAD::*STARTING-THREADS* SB-VM::*FREE-TLS-INDEX* SB-VM::+REQUIRED-FOREIGN-SYMBOLS+ *GC-EPOCH* %%DATA-VECTOR-REFFERS%% SB-VM::%%DATA-VECTOR-REFFERS/CHECK-BOUNDS%% %%DATA-VECTOR-SETTERS%% SB-VM::%%DATA-VECTOR-SETTERS/CHECK-BOUNDS%%)"
 "((let ((tab #a((16) (unsigned-byte 8) 0 0 1 13 20 0 13 0 1 0 0 1 0 15 13 0)))
  (let ((b (& (>> val 3) #xf)))
   (let ((a (>> (<< val 7) 28)))
    (^ a (aref tab b))))))")
(#(B17EA B621A 765909 CA4AAA 261EC99 2740F12 2DCA563 3338509 4838F98 5408EC3 54FE9F6 620099A AA84B76 BFFC3D4 D514142 DC65EEE
   E5D1897 EDFD052 FA21765 FEB5CD0 10E2FDD1 11191CE8 1278BFE6 13632D1F 13FFF4F3 1451524B 14E1C5FA 169E1DF6 16AAD643 1712EA5F
   17A76ECC 1806A438 187CC43D 18AD9421 1954FEBE 19C62B17 1ABE4E69 1BBA8D9F 1C2CB18E 1C5C0C65 1CDF5674 1D7BD61D 1DC4409C
   1F038512 1F354480 1F7C3062)
 "#(SUB-GC POST-GC INTERNAL-ERROR CONTROL-STACK-EXHAUSTED-ERROR BINDING-STACK-EXHAUSTED-ERROR ALIEN-STACK-EXHAUSTED-ERROR HEAP-EXHAUSTED-ERROR UNDEFINED-ALIEN-VARIABLE-ERROR MEMORY-FAULT-ERROR UNHANDLED-TRAP-ERROR UNDEFINED-ALIEN-FUN-ERROR SB-DI::HANDLE-BREAKPOINT SB-DI::HANDLE-SINGLE-STEP-TRAP ENTER-ALIEN-CALLBACK SB-THREAD::ENTER-FOREIGN-CALLBACK TWO-ARG-<= TWO-ARG->= TWO-ARG-/= TWO-ARG-+ TWO-ARG-- TWO-ARG-* TWO-ARG-/ TWO-ARG-< TWO-ARG-> TWO-ARG-= EQL %NEGATE LENGTH ERROR FORMAT EQUALP SB-C::CHECK-DS-LIST SB-C::CHECK-DS-LIST/&REST WRITE-STRING WRITE-CHAR PRINC HAIRY-DATA-VECTOR-SET HAIRY-DATA-VECTOR-REF VECTOR-HAIRY-DATA-VECTOR-SET VECTOR-HAIRY-DATA-VECTOR-REF HAIRY-DATA-VECTOR-SET/CHECK-BOUNDS HAIRY-DATA-VECTOR-REF/CHECK-BOUNDS VECTOR-HAIRY-DATA-VECTOR-SET/CHECK-BOUNDS VECTOR-HAIRY-DATA-VECTOR-REF/CHECK-BOUNDS %LDB VECTOR-UNSIGNED-BYTE-8-P)"
 "((let ((tab #a((32) (unsigned-byte 8) 36 0 51 0 0 19 7 0 16 0 7 50 34 0 13 0 50 7 9 60 50 0 9 51 0 50 0 0 49 12 52 9)))
  (let ((b (& val #x1f)))
   (let ((a (>> (<< val 9) 27)))
    (^ a (aref tab b))))))")
(#(1040002 2668546 31DAFDC 5306AD9 6344932 706CB28 734DBFC C3DE2BA C6B04A8 D096A28 EEFFD62 15D901F3 16130C9E 176FC723 1BCD5E7E
   1C540056 1D1D1C45 1D68FF88)
 "#(:BO-DNZF :BO-DNZFP :BO-DZF :BO-DZFP :BO-F :BO-FP NIL NIL :BO-DNZT :BO-DNZTP :BO-DZT :BO-DZTP :BO-T :BO-TP NIL NIL :BO-DNZ :BO-DNZP :BO-DZ :BO-DZP :BO-U NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)"
 "((let ((tab #a((16) (unsigned-byte 8) 1 15 13 3 0 13 15 0 0 0 1 13 26 0 24 13)))
  (let ((b (& (>> val 5) #xf)))
   (let ((a (>> (<< val 7) 28)))
    (^ a (aref tab b))))))")
(#(21FDBD3 10C09302 155C0369 1DC7A611)
 "#(:LT :GT :EQ :SO)"
 "(  (& (>> val 23) 3) )")
(#(1861B73 50D5264 5C353AF EAF0577 13DD7FC4 1750B6DF 180B283F 1CFC61D0)
 "#(:CR0 :CR1 :CR2 :CR3 :CR4 :CR5 :CR6 :CR7)"
 "(  (& (^ val (>> val 11)) 7))")
(#(B6F7117 14F9B468 19CB1459 1DF3D23A)
 "#(:GE :LE :NE :NS)"
 "(  (& val 3) )")
(#(11202785 1127E4A2 1242E9DE 141A7AF3 1589BF4C 15F1FBBE 161C2E73 17CBC4AC 1838C94A 187C8815 1A243FF4 1B47DA92 1E0A0612
   1EEA7428 1F4EF588 1F7E1134)
 "#(((:TYPE MEMBER-TYPE)) ((:TYPE UNDEFINED-CLASSOID) (:TYPE BUILT-IN-CLASSOID) (:TYPE CONDITION-CLASSOID) (:TYPE STRUCTURE-CLASSOID) (:TYPE STANDARD-CLASSOID) (:TYPE STATIC-CLASSOID) (:TYPE CLASSOID)) ((:TYPE CHARACTER-SET-TYPE) (:TYPE ARRAY-TYPE) (:TYPE NUMERIC-TYPE) (:TYPE CONS-TYPE)) ((:TYPE INTERSECTION-TYPE)) ((:TYPE UNION-TYPE)) ((:TYPE UNKNOWN-TYPE) (:TYPE HAIRY-TYPE)))"
 "((let ((tab #a((8) (unsigned-byte 8) 14 12 14 8 4 7 0 6)))
  (let ((b (& (>> val 3) #x7)))
   (let ((a (>> (<< val 5) 29)))
    (^ a (aref tab b))))))")
(#(10DF3586 11202785 1127E4A2 1242E9DE 12484468 141A7AF3 14D3B353 1589BF4C 15F1FBBE 161C2E73 17CBC4AC 1838C94A 187C8815
   1A243FF4 1ACAB3EB 1B47DA92 1D21B1C3 1E0A0612 1EEA7428 1F4EF588 1F7E1134)
 "#(((:TYPE UNKNOWN-TYPE) (:TYPE HAIRY-TYPE)) ((:TYPE NEGATION-TYPE)) ((:TYPE UNION-TYPE)) ((:TYPE INTERSECTION-TYPE)) ((:TYPE MEMBER-TYPE)) ((:TYPE VALUES-TYPE) (:TYPE FUN-TYPE) (:TYPE FUN-DESIGNATOR-TYPE) (:TYPE ARGS-TYPE)) ((:TYPE NUMERIC-TYPE)) ((:TYPE UNDEFINED-CLASSOID) (:TYPE BUILT-IN-CLASSOID) (:TYPE CONDITION-CLASSOID) (:TYPE STRUCTURE-CLASSOID) (:TYPE STANDARD-CLASSOID) (:TYPE STATIC-CLASSOID) (:TYPE CLASSOID)) ((:TYPE ARRAY-TYPE)) ((:TYPE CONS-TYPE)) ((:TYPE CHARACTER-SET-TYPE)))"
 "((let ((tab #a((16) (unsigned-byte 8) 0 0 0 0 0 3 0 13 0 14 1 1 26 16 18 16)))
  (let ((b (& (>> val 4) #xf)))
   (let ((a (>> (<< val 7) 28)))
    (^ a (aref tab b))))))")
(#(157C1107 18F35777 1B89DB0D 1C70ABBE 1C8187FA)
 "#(((:TYPE SB-PRETTY::NEWLINE)) ((:TYPE SB-PRETTY::INDENTATION)) ((:TYPE SB-PRETTY::BLOCK-START)) ((:TYPE SB-PRETTY::BLOCK-END)) ((:TYPE SB-PRETTY::TAB)))"
 "(  (& (+ val (>> val 25)) 7))")
(#(599636A 88E4826 A49908C 18E8E507 1D40FCBF)
 "#(:CALL :SETHI :ADD :ABSOLUTE :SETHI+ADD)"
 "(  (& (- val (>> val 12)) 7))")
(#(B1B342 27E4E79 34001B1 3CC42AC 4BB7808 5502DD7 70F5EF0 8E1655F 8FFB29F 9D14A2B A8542A3 B0580F9 BE9B4CB C042E4D FB43EC2
   10D39C38 114F77D4 116E414E 11AD100A 12B50090 13B30D76 14287725 159AB905 17AAEED6 17BE5DB2 17D87E68 183A215C 1A66777D
   1EFFF46E 1F125097)
 "#(T *FREE-INTERRUPT-CONTEXT-INDEX* *ALLOW-WITH-INTERRUPTS* *INTERRUPTS-ENABLED* *INTERRUPT-PENDING* *IN-WITHOUT-GCING* *GC-INHIBIT* *GC-PENDING* SB-IMPL::*UNWEAKENED-VECTORS* SB-VM::*PINNED-OBJECTS* *GC-PIN-CODE-PAGES* SB-VM:*CURRENT-CATCH-BLOCK* SB-VM::*CURRENT-UNWIND-PROTECT-BLOCK* SB-VM::*IMMOBILE-CODEBLOB-TREE* SB-VM::*IMMOBILE-CODEBLOB-VECTOR* SB-VM::*DYNSPACE-CODEBLOB-TREE* SB-IMPL::**FINALIZER-STORE** SB-IMPL::*FINALIZER-REHASHLIST* SB-IMPL::*FINALIZERS-TRIGGERED* SB-VM:*BINDING-STACK-START* SB-VM:*CONTROL-STACK-START* SB-VM:*CONTROL-STACK-END* *STEPPING* SB-VM::*FREE-TLS-INDEX* SB-VM::+REQUIRED-FOREIGN-SYMBOLS+ *GC-EPOCH* %%DATA-VECTOR-REFFERS%% SB-VM::%%DATA-VECTOR-REFFERS/CHECK-BOUNDS%% %%DATA-VECTOR-SETTERS%% SB-VM::%%DATA-VECTOR-SETTERS/CHECK-BOUNDS%%)"
 "((let ((tab #a((16) (unsigned-byte 8) 0 0 21 0 17 0 0 1 1 21 0 26 17 18 3 15)))
  (let ((b (& (>> val 10) #xf)))
   (let ((a (>> (<< val 7) 28)))
    (^ a (aref tab b))))))")
(#(16F4DAA 21FDBD3 5ECB3AE 6F06241 749E101 8DB6248 B6F7117 C7FAA2A 14F9B468 155C0369 15ABAFAA 17BE5DB2 1AEFC70F 1DC7A611
   1DF3D23A 1E720E34)
 "#(:F :EQ :LE :LT :LEU :LTU :N :VS :T :NE :GT :GE :GTU :GEU :P :VC)"
 "((let ((tab #a((8) (unsigned-byte 8) 8 13 11 3 0 7 12 0)))
  (let ((b (& (>> val 11) #x7)))
   (let ((a (>> (<< val 5) 29)))
    (^ a (aref tab b))))))")
(#(21FDBD3 822628A B6F7117 C38EAA1 C7FAA2A D2D2AEC 12A7D0B4 14F9B468 16200592 17389CA2 17BE5DB2 1BFF474C 1C928997 1DF3D23A
   1E0FCECD 1E4F5E55)
 "#(:F :NE :LG :UL :L :UG :G :U :T :EQ :UE :GE :UGE :LE :ULE :O)"
 "((let ((tab #a((8) (unsigned-byte 8) 8 5 0 0 12 13 12 11)))
  (let ((b (& (>> val 6) #x7)))
   (let ((a (>> (<< val 5) 29)))
    (^ a (aref tab b))))))")
(#(72984B1 9800221 180941AA)
 "#(:ICC :RESERVED :XCC :RESERVED)"
 "(  (& (>> val 3) 3) )")
(#(47CD79C 852CFC4 16AE3239 1FE4E0A8)
 "#(:FCC0 :FCC1 :FCC2 :FCC3)"
 "(  (& (>> val 4) 3) )")
(#(47CD79C 72984B1 852CFC4 9800221 16AE3239 180941AA 1FE4E0A8)
 "#(:FCC0 :FCC1 :FCC2 :FCC3 :ICC :RESERVED :XCC :RESERVED)"
 "(  (& (^ (>> val 1) (>> val 3)) 7))")
(#(18531C5 39DC3DA 6CAE443 134DBB03 180941AA 19465540 1A6F3BA9)
 "#(:RESERVED :Z :LEZ :LZ :RESERVED :NZ :GZ :GEZ)"
 "(  (& (- (>> val 1) (>> val 4)) 7))")
(#(207D684 20BE5F4 34001B1 34EBEE5 35C8E17 3CC42AC 4BB7808 4C4FB75 8E1655F 8FFB29F A8542A3 AD2E8E6 B0580F9 BE9B4CB E824A51
   EF70D00 FB43EC2 116E414E 118F7907 11AD100A 11E583E7 11FF1DFE 12B50090 13D394E1 13E80875 15E063C2 17BE5DB2 17D87E68 1A66777D
   1E25A858 1F125097)
 "#(T SB-VM:*CURRENT-CATCH-BLOCK* SB-VM::*CURRENT-UNWIND-PROTECT-BLOCK* SB-VM::*IMMOBILE-CODEBLOB-TREE* SB-VM::*IMMOBILE-CODEBLOB-VECTOR* SB-VM::*DYNSPACE-CODEBLOB-TREE* SB-IMPL::**FINALIZER-STORE** SB-IMPL::*FINALIZER-REHASHLIST* SB-IMPL::*FINALIZERS-TRIGGERED* SB-THREAD::*STARTING-THREADS* SB-VM::*FREE-TLS-INDEX* SB-VM::+REQUIRED-FOREIGN-SYMBOLS+ *GC-EPOCH* %%DATA-VECTOR-REFFERS%% SB-VM::%%DATA-VECTOR-REFFERS/CHECK-BOUNDS%% %%DATA-VECTOR-SETTERS%% SB-VM::%%DATA-VECTOR-SETTERS/CHECK-BOUNDS%% SB-C:*ALIEN-STACK-POINTER* *PSEUDO-ATOMIC-BITS* SB-VM::*BINDING-STACK-POINTER* SB-VM::*FP-CONSTANT-0D0* SB-VM::*FP-CONSTANT-1D0* SB-VM::*FP-CONSTANT-0F0* SB-VM::*FP-CONSTANT-1F0* SB-VM::*FP-CONSTANT-0L0* SB-VM::*FP-CONSTANT-1L0* SB-VM::*FP-CONSTANT-PI* SB-VM::*FP-CONSTANT-L2T* SB-VM::*FP-CONSTANT-L2E* SB-VM::*FP-CONSTANT-LG2* SB-VM::*FP-CONSTANT-LN2*)"
 "((let ((tab #a((16) (unsigned-byte 8) 0 0 1 15 21 12 20 0 12 29 16 26 0 22 21 31)))
  (let ((b (& (>> val 3) #xf)))
   (let ((a (>> (<< val 7) 28)))
    (^ a (aref tab b))))))")
(#(B17EA B621A 765909 CA4AAA 261EC99 2740F12 2DCA563 3338509 4838F98 5408EC3 54FE9F6 620099A 8735E7B AA84B76 BFFC3D4 D514142
   DC65EEE E5D1897 EDFD052 FA21765 FEB5CD0 108E2363 10E2FDD1 11191CE8 1278BFE6 13632D1F 13FFF4F3 1451524B 169E1DF6 16AAD643
   1712EA5F 17A76ECC 1806A438 187CC43D 18AD9421 19C62B17 1ABE4E69 1BBA8D9F 1C5C0C65 1CDF5674 1D7BD61D 1DC4409C 1F038512
   1F354480 1F7C3062)
 "#(SUB-GC POST-GC INTERNAL-ERROR CONTROL-STACK-EXHAUSTED-ERROR BINDING-STACK-EXHAUSTED-ERROR ALIEN-STACK-EXHAUSTED-ERROR HEAP-EXHAUSTED-ERROR UNDEFINED-ALIEN-VARIABLE-ERROR MEMORY-FAULT-ERROR UNHANDLED-TRAP-ERROR UNDEFINED-ALIEN-FUN-ERROR SB-DI::HANDLE-BREAKPOINT SB-DI::HANDLE-SINGLE-STEP-TRAP HANDLE-WIN32-EXCEPTION SB-THREAD::RUN-INTERRUPTION ENTER-ALIEN-CALLBACK SB-THREAD::ENTER-FOREIGN-CALLBACK TWO-ARG-+ TWO-ARG-- TWO-ARG-* TWO-ARG-/ TWO-ARG-< TWO-ARG-> TWO-ARG-= EQL %NEGATE LENGTH ERROR FORMAT EQUALP SB-C::CHECK-DS-LIST SB-C::CHECK-DS-LIST/&REST WRITE-STRING WRITE-CHAR PRINC HAIRY-DATA-VECTOR-SET HAIRY-DATA-VECTOR-REF VECTOR-HAIRY-DATA-VECTOR-SET VECTOR-HAIRY-DATA-VECTOR-REF HAIRY-DATA-VECTOR-SET/CHECK-BOUNDS HAIRY-DATA-VECTOR-REF/CHECK-BOUNDS VECTOR-HAIRY-DATA-VECTOR-SET/CHECK-BOUNDS VECTOR-HAIRY-DATA-VECTOR-REF/CHECK-BOUNDS %LDB VECTOR-UNSIGNED-BYTE-8-P)"
 "((let ((tab #a((32) (unsigned-byte 8) 28 46 51 0 0 18 22 0 19 0 0 50 34 0 49 0 12 7 9 60 12 0 10 51 7 50 9 0 48 55 0 0)))
  (let ((b (& val #x1f)))
   (let ((a (>> (<< val 9) 27)))
    (^ a (aref tab b))))))")
(#(104000C 2668546 31DAFDC 5306AD9 6344932 706CB28 734DBFC C3DE2BA C6B04A8 D096A28 EEFFD62 15D901F3 16130C9E 176FC723 1BCD5E7E
   1C540056 1D1D1C45 1D68FF88)
 "#(:BO-DNZF :BO-DNZFP :BO-DZF :BO-DZFP :BO-F :BO-FP NIL NIL :BO-DNZT :BO-DNZTP :BO-DZT :BO-DZTP :BO-T :BO-TP NIL NIL :BO-DNZ :BO-DNZP :BO-DZ :BO-DZP :BO-U NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)"
 "((let ((tab #a((16) (unsigned-byte 8) 1 15 13 3 0 13 15 0 0 0 1 13 26 0 24 13)))
  (let ((b (& (>> val 5) #xf)))
   (let ((a (>> (<< val 7) 28)))
    (^ a (aref tab b))))))")
(#(B17EA B621A 765909 CA4AAA 261EC99 2740F12 2DCA563 3338509 4838F98 5408EC3 54FE9F6 620099A AA84B76 BFFC3D4 D514142 DC65EEE
   E5D1897 EDFD052 FA21765 FEB5CD0 10E2FDD1 11191CE8 1278BFE6 13632D1F 13FFF4F3 1451524B 169E1DF6 16AAD643 1712EA5F 17A76ECC
   1806A438 187CC43D 18AD9421 19C62B17 1ABE4E69 1BBA8D9F 1C5C0C65 1CDF5674 1D7BD61D 1DC4409C 1F038512 1F354480 1F7C3062)
 "#(SUB-GC POST-GC INTERNAL-ERROR CONTROL-STACK-EXHAUSTED-ERROR BINDING-STACK-EXHAUSTED-ERROR ALIEN-STACK-EXHAUSTED-ERROR HEAP-EXHAUSTED-ERROR UNDEFINED-ALIEN-VARIABLE-ERROR MEMORY-FAULT-ERROR UNHANDLED-TRAP-ERROR UNDEFINED-ALIEN-FUN-ERROR SB-DI::HANDLE-BREAKPOINT SB-DI::HANDLE-SINGLE-STEP-TRAP ENTER-ALIEN-CALLBACK SB-THREAD::ENTER-FOREIGN-CALLBACK TWO-ARG-+ TWO-ARG-- TWO-ARG-* TWO-ARG-/ TWO-ARG-< TWO-ARG-> TWO-ARG-= EQL %NEGATE LENGTH ERROR FORMAT EQUALP SB-C::CHECK-DS-LIST SB-C::CHECK-DS-LIST/&REST WRITE-STRING WRITE-CHAR PRINC HAIRY-DATA-VECTOR-SET HAIRY-DATA-VECTOR-REF VECTOR-HAIRY-DATA-VECTOR-SET VECTOR-HAIRY-DATA-VECTOR-REF HAIRY-DATA-VECTOR-SET/CHECK-BOUNDS HAIRY-DATA-VECTOR-REF/CHECK-BOUNDS VECTOR-HAIRY-DATA-VECTOR-SET/CHECK-BOUNDS VECTOR-HAIRY-DATA-VECTOR-REF/CHECK-BOUNDS %LDB VECTOR-UNSIGNED-BYTE-8-P)"
 "((let ((tab #a((32) (unsigned-byte 8) 6 18 7 0 0 19 22 0 0 0 0 51 28 0 7 0 50 7 9 26 61 0 9 49 0 57 33 0 13 59 0 9)))
  (let ((b (& val #x1f)))
   (let ((a (>> (<< val 9) 27)))
    (^ a (aref tab b))))))")
(#(94C14BE FFF761A 11098B07 15DD75B4)
 "(SB-VM::FIXEDOBJ SB-VM::TEXT SB-VM::PERMGEN SB-VM::READ-ONLY)"
 "(  (& (>> val 7) 3) )")
(#(3FA62A6 62EF3EE 9A70D10 FEC4E06 1D6ECFAA 1E064A66)
 "(SPECIAL IGNORABLE IGNORE DYNAMIC-EXTENT SB-C::CONSTANT-VALUE SB-C::NO-CONSTRAINTS)"
 "(  (& (+ (>> val 1) (>> val 8) (>> val 22)) 7))")
(#(104000C 69CB71D D01C0A4 1AF8CC21)
 "(NIL BASE-CHAR CHARACTER *)"
 "(  (& (>> val 18) 3) )")
(#(4A3A8D8 AA76B8D AD1A9A6 18AD9421)
 "(SIGNAL ERROR CERROR WARN)"
 "(  (& (>> val 2) 3) )")
(#(104000C 85FCC7A 1A13A884 1CE6A754)
 "(NIL FLOAT RATIONAL INTEGER)"
 "(  (& (>> val 3) 3) )")
(#(6BA2A86 A3A7296 B8918A5 137D56C3)
 "(SB-PCL::READER SB-PCL::WRITER BOUNDP MAKUNBOUND)"
 "(  (& (>> val 13) 3) )")
(#(251FD28 A93B42B 1BA36207 1D4FDA09)
 "(FUNCALLABLE-STRUCTURE LIST VECTOR STRUCTURE)"
 "(  (& (>> val 10) 3) )")
(#(7B1BC0A 7B9838C DBBEDB4 1005EBBD 19D9054E 1D29720E 1FA2DCD1 1FBACEDB 1FF49812)
 "(&ALLOW-OTHER-KEYS &AUX &BODY &ENVIRONMENT &KEY &MORE &OPTIONAL &REST &WHOLE)"
 "((let ((tab #a((8) (unsigned-byte 8) 0 15 0 2 5 4 5 0)))
  (let ((b (& val #x7)))
   (let ((a (>> (<< val 3) 29)))
    (^ a (aref tab b))))))")
(#(104000C 7C94100 F97347B 1CFBBF28)
 "(NIL :HEAD :TAIL :BOTH)"
 "(  (& (>> val 17) 3) )")
(#(104000C 10BC32E6 1D1E3194 1F806395)
 "(:SPECIAL-FORM :MACRO :FUNCTION NIL)"
 "(  (& (>> val 8) 3) )")
(#(2020E66 55B9C38 14EB7C42 17EEB17C)
 "(:DEFINED :ASSUMED :DEFINED-METHOD :DECLARED)"
 "(  (& (>> val 1) 3) )")
(#(104000C 5A6F13F 8064CC0 195DE993)
 "(NIL NOTINLINE MAYBE-INLINE INLINE)"
 "(  (& (>> val 1) 3) )")
(#(1716F56 62EF3EE C44F192 D70AD39 1560B2CB 1F806395)
 "(:UNKNOWN :ALIEN :GLOBAL :MACRO :CONSTANT :SPECIAL)"
 "(  (& (^ (>> val 2) (>> val 11)) 7))")
(#(104000C 2020E66 87F29FB 10CE71A4 1E40E977)
 "(NIL :FORTHCOMING-DEFCLASS-TYPE :INSTANCE :DEFINED :PRIMITIVE)"
 "(  (& (- val (>> val 3)) 7))")
(#(55CDFEE 1428BC2E 17D29CF7 1A8F9D20)
 "(SB-C::PROPER-OR-DOTTED-LIST SB-C::PROPER-OR-CIRCULAR-LIST SB-C::PROPER-SEQUENCE SB-C::PROPER-LIST)"
 "(  (& (>> val 7) 3) )")
(#(104000C 2D9D746 B0FE826 162BDDB3)
 "(:AUTO :IMMOBILE :DYNAMIC NIL)"
 "(  (& (>> val 10) 3) )")
(#(104000C 121266F1 19E4FB07 1ED4A3A6 1EECC275)
 "(:DELETED :INITIAL :COMPLEX-TOPLEVEL :TOPLEVEL NIL)"
 "(  (& (^ val (>> val 25)) 7))")
(#(894088A D6D0CF0 E0D4392 FEC4E06 11C9FCE5 139B5E17 1AB8B2C8)
 "(:RESTORE-NSP :DYNAMIC-EXTENT :TAGBODY :BLOCK :UNWIND-PROTECT :CATCH :SPECIAL-BIND)"
 "(  (& (^ (>> val 13) (>> val 21)) 7))")
(#(A1077 2020E66 55B9C38 14A0A575 14EB7C42 17EEB17C)
 "(:DEFINED-METHOD :DEFINED :DEFINED-HERE :ASSUMED :DECLARED-VERIFY :DECLARED)"
 "(  (& (- (>> val 17) (>> val 26)) 7))")
(#(104000C 946119B 107BA6B6 17BE5DB2)
 "(SB-C::INITIAL-UNUSED T SET NIL)"
 "(  (& (>> val 2) 3) )")
(#(1716F56 62EF3EE D70AD39 EA51AB1)
 "(:UNKNOWN :GLOBAL :GLOBAL-FUNCTION :SPECIAL)"
 "(  (& (>> val 2) 3) )")
(#(104000C 36C1C1A A8F03FB AD1E8BA B2215A5 B9E470B E6153B7 121266F1 1316953C 16139847 170F0B58 19E4FB07)
 "(:TOPLEVEL-XEP :ZOMBIE :ASSIGNMENT :MV-LET :LET :CLEANUP :ESCAPE :TOPLEVEL :EXTERNAL :DELETED :OPTIONAL NIL)"
 "((let ((tab #a((8) (unsigned-byte 8) 0 11 0 3 8 0 11 5)))
  (let ((b (& (>> val 21) #x7)))
   (let ((a (>> (<< val 5) 29)))
    (^ a (aref tab b))))))")
(#(27F36EA B2215A5 F39D75A 1AF7EA47 1B7C96A4 1D7583C8)
 "(:MORE-COUNT :MORE-CONTEXT :REST :KEYWORD :OPTIONAL :REQUIRED)"
 "(  (& (- (>> val 2) (>> val 18)) 7))")
(#(D58F70B DAC6C29 F1A0091 18AD9421 1C52F99A)
 "(:UNKNOWN-KEYS :KNOWN :ERROR :FULL :LOCAL)"
 "(  (& (+ (>> val 1) (>> val 6)) 7))")
(#(1716F56 3CEB7B0 D5C1648 EA5F016 1B8F4E10)
 "(:STACK :UNUSED :UNKNOWN :FIXED :DELAYED)"
 "(  (& (- (>> val 1) (>> val 15)) 7))")
(#(BE96407 DAB5BB2 18C9D02A 1970C923 1B659DEF)
 "(:FAST-SAFE :FAST :SMALL-SAFE :SMALL :SAFE)"
 "(  (& (>> val 2) 7))")
(#(104000C 551F3D5 17BE5DB2 1B68F328)
 "(:COMPUTE-ONLY :FORCE-TO-STACK NIL T)"
 "(  (& (>> val 2) 3) )")
(#(3FF4B3 104000C 14EE526 3CEB7B0 563EB8C)
 "(:FIXED :KNOWN-RETURN :LOCAL-CALL :FULL-CALL NIL)"
 "(  (& (+ (>> val 4) (>> val 16)) 7))")
(#(32D63E3 446C07E 53F981E 62BB0E0 A6C117D CA59D09 EA5F016 1560B2CB 175C83E0 1D07CAE8 1F175DA6)
 "(:ARG-PASS :UNUSED :ALIAS :COMPONENT :CONSTANT :LOAD :SAVE-ONCE :SAVE :DEBUG-ENVIRONMENT :ENVIRONMENT :NORMAL)"
 "((let ((tab #a((8) (unsigned-byte 8) 0 0 0 14 0 15 0 5)))
  (let ((b (& (>> val 1) #x7)))
   (let ((a (>> (<< val 5) 29)))
    (^ a (aref tab b))))))")
(#(5DC9D57 6753226 B0DAAED 11098B07)
 "(:LIVE :READ-ONLY :WRITE :READ)"
 "(  (& (>> val 5) 3) )")
(#(1268989 842A30F 10F0740C 157A0C46 1D0837F1)
 "(:MORE-RESULT :MORE-ARGUMENT :TEMPORARY :RESULT :ARGUMENT)"
 "(  (& (^ (>> val 2) (>> val 17)) 7))")
(#(73FB831 7B255E2 85FCC7A 1025CF34 151C1A4B 1C900CEB 1CB7AFC2 1E9F8F78)
 "(FLOAT SB-ALIEN::MEM-BLOCK ALIEN-VALUE SINGLE-FLOAT DOUBLE-FLOAT SYSTEM-AREA-POINTER SB-ALIEN::RECORD ENUM)"
 "(  (& (^ (>> val 2) (>> val 25)) 7))")
(#(4D11911 D0386CD D82F66B 16439367)
 "(:IN :COPY :OUT :IN-OUT)"
 "(  (& (>> val 1) 3) )")
(#(6A58F9 79D5AF0 10BC32E6 15878D53 1EF7DF06)
 "(FUNCTION SB-IMPL::PREDICATE SB-IMPL::KEY SB-IMPL::TEST SB-IMPL::TEST-NOT)"
 "(  (& (+ val (>> val 6)) 7))")
(#(104000C 38A0CEF 8DAFFE7 169B6C84)
 "(:UNSPECIFIC :WILD :NEWEST NIL)"
 "(  (& (>> val 24) 3) )")
(#(104000C 38A0CEF 68B5166 169B6C84)
 "(:UNC :WILD :UNSPECIFIC NIL)"
 "(  (& (>> val 6) 3) )")
(#(69C369F AAA9D58 12B27C89 191366AE 1AB4D7A9 1CE6A754 1CEC31D4)
 "(SB-VM::POSITIVE-FIXNUM FIXNUM INTEGER BIGNUM SB-VM::UNSIGNED-BYTE-31 SB-VM::UNSIGNED-BYTE-32 SB-VM::SIGNED-BYTE-32)"
 "(  (& (- val (>> val 18)) 7))")
(#(3C45822 7BDD108 AFB1FA8 BC07098 15EC7A14 1FA5A287)
 "(COMPILED-FUNCTION HASH-TABLE PACKAGE PATHNAME RANDOM-STATE READTABLE)"
 "(  (& (>> val 3) 7))")
(#(4A3C52B A5392C4 15878D53 1BB5BFF6)
 "(:CONC-NAME :CONSTRUCTOR :COPIER :PREDICATE)"
 "(  (& (>> val 4) 3) )")
(#(104000C 4A3C52B A5392C4 1565008D 15878D53 1BB5BFF6)
 "(:NAMED :PREDICATE :COPIER :CONSTRUCTOR :CONC-NAME NIL)"
 "(  (& (+ (>> val 4) (>> val 14)) 7))")
(#(212624B 17115731 1CDE01CC 1EA4A8D5)
 "(:INVERT :PRESERVE :DOWNCASE :UPCASE)"
 "(  (& (>> val 2) 3) )")
(#(C96C1FB D3364BF 10BC32E6 1BFCFAA9)
 "(SB-C::INHIBIT-FLUSHING SB-C::MODIFYING FUNCTION-DESIGNATOR FUNCTION)"
 "(  (& (- val (>> val 1)) 3) )")
(#(55CDFEE BBF70AB 1428BC2E 17D29CF7 1A8F9D20)
 "(SB-C::PROPER-OR-CIRCULAR-LIST SB-C::PROPER-OR-DOTTED-LIST SB-C::PROPER-LIST SB-C::PROPER-SEQUENCE TYPE-SPECIFIER)"
 "(  (& (- (>> val 3) (>> val 20)) 7))")
(#(6F32A4A 9E7B330 D01C0A4 193B4300)
 "(:BIVALENT SIGNED-BYTE UNSIGNED-BYTE CHARACTER)"
 "(  (& (>> val 14) 3) )")
(#(104000C 4D67BB1 C7690D3 D0845D9 10FD1211 15584644 18AD9421 1EB82D24)
 "(NIL :SUPERSEDE :APPEND :OVERWRITE :RENAME-AND-DELETE :RENAME :NEW-VERSION :ERROR)"
 "(  (& (+ (>> val 1) (>> val 5)) 7))")
(#(3DF6CFB 69DE052 AFF0D03 1C1CEE68)
 "(:PROBE :IO :OUTPUT :INPUT)"
 "(  (& (>> val 3) 3) )")
(#(2DB378 212624B 19B3F9C2 1EA4A8D5)
 "(:CAPITALIZE-FIRST :CAPITALIZE :DOWNCASE :UPCASE)"
 "(  (& val 3) )")
(#(4B7E855 955B8C0 E207D79 12D9223D 15B85F92)
 "(:SLOT-SET :STRUCT-SET :SVSET :RPLACD :RPLACA)"
 "(  (& (^ (>> val 8) (>> val 24)) 7))")
(#(EA51AB1 10BC32E6 1A82FAE3 1D3CF8A9)
 "(FUNCTION SB-C::GLOBAL-FUNCTION LAMBDA NAMED-LAMBDA)"
 "(  (& (>> val 25) 3) )")
(#(A8F03FB 121266F1 1316953C 16139847)
 "(:ESCAPE :CLEANUP :ZOMBIE :DELETED)"
 "(  (& (>> val 1) 3) )")
(#(104000C A8F03FB AD1E8BA B2215A5 16139847)
 "(NIL :ESCAPE :CLEANUP :OPTIONAL :ASSIGNMENT)"
 "(  (& (- val (>> val 26)) 7))")
(#(6B6BF4A AB3C1CB C526A73 10FA0061 176D3805 19C62B17 1C57CA78 1E088EC6)
 "(SB-C::EQUALITY EQL <= >= = > < TYPEP)"
 "(  (& (- (>> val 14) (>> val 26)) 7))")
(#(104000C A8F03FB B2215A5 B9E470B 16139847 19E4FB07)
 "(:OPTIONAL :EXTERNAL :TOPLEVEL NIL :ESCAPE :CLEANUP)"
 "(  (& (>> val 9) 7))")
(#(A6C117D CA59D09 EA5F016 1560B2CB)
 "(:COMPONENT :ENVIRONMENT :CONSTANT :UNUSED)"
 "(  (& (>> val 1) 3) )")
(#(F67C443 1865DF6A 1BA36207 1D4FDA09)
 "(SB-IMPL::|List| LIST SB-IMPL::|Vector| VECTOR)"
 "(  (& (>> val 10) 3) )")
(#(73FB831 BD2F77D 1025CF34 171DBF7B)
 "(SHORT-FLOAT SINGLE-FLOAT DOUBLE-FLOAT LONG-FLOAT)"
 "(  (& (>> val 2) 3) )")
(#(4A3A8D8 91687F7 162FB322 18AD9421 1E5EFF82)
 "(ERROR WARN STYLE-WARN SB-C:COMPILER-WARN SB-C:COMPILER-STYLE-WARN)"
 "(  (& (- (>> val 19) (>> val 27)) 7))")
(#(AB3C1CB 176D3805 1C57CA78 1E088EC6)
 "(< <= > >=)"
 "(  (& val 3) )")
(#(8435EA5 9AB54CB D129BB8 1339FC43 1866BF70)
 "(RASSOC ASSOC MEMBER POSITION FIND)"
 "(  (& (^ (>> val 2) (>> val 7)) 7))")
(#(6CA905 214F79E 21FDBD3 19C62B17)
 "(EQL EQ CHAR= CHAR-EQUAL)"
 "(  (& (>> val 19) 3) )")
(#(104000C A8F03FB B2215A5 B9E470B 19E4FB07)
 "(NIL :EXTERNAL :OPTIONAL :TOPLEVEL :CLEANUP)"
 "(  (& (^ val (>> val 10)) 7))")
(#(5EBFF53 1030FC59 111512C8 17F2BED0)
 "(:UNSAFE-DEFAULT :SAFE-DEFAULT :UNBOUND :TRAP)"
 "(  (& (>> val 16) 3) )")
(#(14EE526 887BFA5 9D7107A 10EC3986 188FA403 190B13F0)
 "(SB-C:RETURN-SINGLE RETURN SB-C:KNOWN-RETURN SB-C:TAIL-CALL SB-C:TAIL-CALL-NAMED SB-C:STATIC-TAIL-CALL-NAMED)"
 "(  (& (- (>> val 1) (>> val 10)) 7))")
(#(74C47B3 FA95B8F 11126B0F 164F6840)
 "(:NFKC :NFC :NFKD :NFD)"
 "(  (& (>> val 16) 3) )")
(#(104000C 85A9D0F B9E470B 1FF36ED1)
 "(NIL :INHERITED :EXTERNAL :INTERNAL)"
 "(  (& (>> val 1) 3) )")
(#(104000C B570D6F 14792CA0 1E362EC1 1EF7DF06)
 "(:KEY-OR-VALUE :KEY-AND-VALUE :VALUE :KEY NIL)"
 "(  (& (+ (>> val 2) (>> val 15)) 7))")
(#(104000C 7C94100 943F70E 1956CA9B)
 "(NIL :STRINGS :BOTH :SYMBOLS)"
 "(  (& (>> val 1) 3) )")
(#(2443983 C339804 C7E4044 154A04D8 1A9EBC11)
 "(:MANDATORY :LITERAL :MISER :FILL :LINEAR)"
 "(  (& (+ (>> val 1) (>> val 14)) 7))")
(#(2443983 C339804 C7E4044 1A9EBC11)
 "(:MANDATORY :MISER :FILL :LINEAR)"
 "(  (& (>> val 21) 3) )")
(#(7C34A62 8B6E597 124CFB57 1509475D)
 "(:SECTION-RELATIVE :LINE-RELATIVE :SECTION :LINE)"
 "(  (& (>> val 16) 3) )")
(#(104000C 32C5B45 5FDAE36 61DD4A0 DB99C7F 1547E84B 1D73BD1E)
 "(:VERSION :TYPE :NAME :DIRECTORY :DEVICE :HOST NIL)"
 "(  (& (+ val (>> val 23)) 7))")
(#(4A3A8D8 F349450 11D99AC0 18AD9421)
 "(:FORCE :ERROR :WARN :PUNT)"
 "(  (& (>> val 18) 3) )")
(#(73A68AE AF3638B BF74E17 18042068)
 "(:UNKNOWN-RETURN-PARTNER :FUN-END :FUN-START :CODE-LOCATION)"
 "(  (& (>> val 23) 3) )")
(#(14EE526 5DFEC5E 79479D7 8E8A73F 17A76ECC 1ACB3CFC 1B6AC618 1E52DC8F 1EB34BA6)
 "(:UNPARSED :NON-LOCAL-ENTRY :SINGLE-VALUE-RETURN :CALL-SITE :BLOCK-START :NON-LOCAL-EXIT :INTERNAL-ERROR :KNOWN-RETURN :UNKNOWN-RETURN)"
 "((let ((tab #a((8) (unsigned-byte 8) 14 0 2 0 0 5 0 5)))
  (let ((b (>> (<< val 3) 29)))
   (let ((a (& val #x7)))
    (^ a (aref tab b))))))")
(#(62EF3EE 9760A01 F6A46EB 13861417)
 "(SB-PCL::%CLASS SB-PCL::%PARAMETER SB-PCL::%VARIABLE-REBINDING SPECIAL)"
 "(  (& (>> val 2) 3) )")
(#(E862F90 F6A333B 19C62B17 1FB17551)
 "(CLASS SB-PCL::PROTOTYPE SB-PCL::CLASS-EQ EQL)"
 "(  (& (>> val 10) 3) )")
(#(3C45822 AFB1FA8 BC07098 15EC7A14 1FA5A287)
 "(HASH-TABLE PACKAGE PATHNAME RANDOM-STATE READTABLE)"
 "(  (& (+ (>> val 2) (>> val 24)) 7))")
(#(1C3286B 32D63E3 446C07E 53F981E 62BB0E0 A6C117D CA59D09 EA5F016 1560B2CB 175C83E0 1D07CAE8 1F175DA6)
 "(:ARG-PASS :SPECIFIED-SAVE :UNUSED :ALIAS :COMPONENT :CONSTANT :LOAD :SAVE-ONCE :SAVE :DEBUG-ENVIRONMENT :ENVIRONMENT :NORMAL)"
 "((let ((tab #a((8) (unsigned-byte 8) 0 3 0 12 12 0 6 7)))
  (let ((b (& (>> val 1) #x7)))
   (let ((a (>> (<< val 5) 29)))
    (^ a (aref tab b))))))")
(#(51B38E7 567F75C AA06795 C8CC2CF CDFAB71 1C89EBAE)
 "(:WORD :W :DOUBLE :D :SINGLE :S)"
 "(  (& (- (>> val 3) (>> val 27)) 7))")
(#(1040002 69CB71D D01C0A4 1AF8CC21)
 "(NIL BASE-CHAR CHARACTER *)"
 "(  (& (>> val 18) 3) )")
(#(1040002 85FCC7A 1A13A884 1CE6A754)
 "(NIL FLOAT RATIONAL INTEGER)"
 "(  (& (>> val 10) 3) )")
(#(1040002 7C94100 F97347B 1CFBBF28)
 "(NIL :HEAD :TAIL :BOTH)"
 "(  (& (>> val 17) 3) )")
(#(1040002 10BC32E6 1D1E3194 1F806395)
 "(:SPECIAL-FORM :MACRO :FUNCTION NIL)"
 "(  (& (>> val 8) 3) )")
(#(1040002 5A6F13F 8064CC0 195DE993)
 "(NIL NOTINLINE MAYBE-INLINE INLINE)"
 "(  (& (>> val 7) 3) )")
(#(1040002 2020E66 87F29FB 10CE71A4 1E40E977)
 "(NIL :FORTHCOMING-DEFCLASS-TYPE :INSTANCE :DEFINED :PRIMITIVE)"
 "(  (& (- (>> val 7) (>> val 28)) 7))")
(#(1040002 2D9D746 B0FE826 162BDDB3)
 "(:AUTO :IMMOBILE :DYNAMIC NIL)"
 "(  (& (>> val 10) 3) )")
(#(1040002 121266F1 19E4FB07 1ED4A3A6 1EECC275)
 "(:DELETED :INITIAL :COMPLEX-TOPLEVEL :TOPLEVEL NIL)"
 "(  (& (- val (>> val 12)) 7))")
(#(1040002 946119B 107BA6B6 17BE5DB2)
 "(SB-C::INITIAL-UNUSED T SET NIL)"
 "(  (& (>> val 21) 3) )")
(#(1040002 36C1C1A A8F03FB AD1E8BA B2215A5 B9E470B E6153B7 121266F1 1316953C 16139847 170F0B58 19E4FB07)
 "(:TOPLEVEL-XEP :ZOMBIE :ASSIGNMENT :MV-LET :LET :CLEANUP :ESCAPE :TOPLEVEL :EXTERNAL :DELETED :OPTIONAL NIL)"
 "((let ((tab #a((8) (unsigned-byte 8) 0 11 0 3 8 0 11 5)))
  (let ((b (& (>> val 21) #x7)))
   (let ((a (>> (<< val 5) 29)))
    (^ a (aref tab b))))))")
(#(1040002 551F3D5 17BE5DB2 1B68F328)
 "(:COMPUTE-ONLY :FORCE-TO-STACK NIL T)"
 "(  (& (>> val 4) 3) )")
(#(3FF4B3 1040002 14EE526 3CEB7B0 563EB8C)
 "(:FIXED :KNOWN-RETURN :LOCAL-CALL :FULL-CALL NIL)"
 "(  (& (+ val (>> val 1)) 7))")
(#(1040002 38A0CEF 8DAFFE7 169B6C84)
 "(:UNSPECIFIC :WILD :NEWEST NIL)"
 "(  (& (>> val 24) 3) )")
(#(1040002 38A0CEF 68B5166 169B6C84)
 "(:UNC :WILD :UNSPECIFIC NIL)"
 "(  (& (>> val 6) 3) )")
(#(1040002 4A3C52B A5392C4 1565008D 15878D53 1BB5BFF6)
 "(:NAMED :PREDICATE :COPIER :CONSTRUCTOR :CONC-NAME NIL)"
 "(  (& (>> val 2) 7))")
(#(1040002 4D67BB1 C7690D3 D0845D9 10FD1211 15584644 18AD9421 1EB82D24)
 "(NIL :SUPERSEDE :APPEND :OVERWRITE :RENAME-AND-DELETE :RENAME :NEW-VERSION :ERROR)"
 "(  (& (- val (>> val 3)) 7))")
(#(1040002 A8F03FB AD1E8BA B2215A5 16139847)
 "(NIL :ESCAPE :CLEANUP :OPTIONAL :ASSIGNMENT)"
 "(  (& (^ (>> val 6) (>> val 8)) 7))")
(#(1040002 A8F03FB B2215A5 B9E470B 16139847 19E4FB07)
 "(:OPTIONAL :EXTERNAL :TOPLEVEL NIL :ESCAPE :CLEANUP)"
 "(  (& (>> val 9) 7))")
(#(1040002 A8F03FB B2215A5 B9E470B 19E4FB07)
 "(NIL :EXTERNAL :OPTIONAL :TOPLEVEL :CLEANUP)"
 "(  (& (+ (>> val 2) (>> val 14)) 7))")
(#(1040002 B570D6F 14792CA0 1E362EC1 1EF7DF06)
 "(:KEY-OR-VALUE :KEY-AND-VALUE :VALUE :KEY NIL)"
 "(  (& (^ (>> val 1) (>> val 3)) 7))")
(#(1040002 7C94100 943F70E 1956CA9B)
 "(NIL :STRINGS :BOTH :SYMBOLS)"
 "(  (& (>> val 8) 3) )")
(#(1040002 32C5B45 5FDAE36 61DD4A0 DB99C7F 1547E84B 1D73BD1E)
 "(:VERSION :TYPE :NAME :DIRECTORY :DEVICE :HOST NIL)"
 "(  (& (^ (>> val 3) (>> val 23)) 7))")
(#(3E4000C 69CB71D D01C0A4 1AF8CC21)
 "(NIL BASE-CHAR CHARACTER *)"
 "(  (& (>> val 18) 3) )")
(#(3E4000C 85FCC7A 1A13A884 1CE6A754)
 "(NIL FLOAT RATIONAL INTEGER)"
 "(  (& (>> val 3) 3) )")
(#(3E4000C 7C94100 F97347B 1CFBBF28)
 "(NIL :HEAD :TAIL :BOTH)"
 "(  (& (>> val 17) 3) )")
(#(3E4000C 10BC32E6 1D1E3194 1F806395)
 "(:SPECIAL-FORM :MACRO :FUNCTION NIL)"
 "(  (& (>> val 8) 3) )")
(#(3E4000C 5A6F13F 8064CC0 195DE993)
 "(NIL NOTINLINE MAYBE-INLINE INLINE)"
 "(  (& (>> val 1) 3) )")
(#(2020E66 3E4000C 87F29FB 10CE71A4 1E40E977)
 "(NIL :FORTHCOMING-DEFCLASS-TYPE :INSTANCE :DEFINED :PRIMITIVE)"
 "(  (& (- val (>> val 3)) 7))")
(#(2D9D746 3E4000C B0FE826 162BDDB3)
 "(:AUTO :IMMOBILE :DYNAMIC NIL)"
 "(  (& (>> val 10) 3) )")
(#(3E4000C 121266F1 19E4FB07 1ED4A3A6 1EECC275)
 "(:DELETED :INITIAL :COMPLEX-TOPLEVEL :TOPLEVEL NIL)"
 "(  (& (+ val (>> val 27)) 7))")
(#(3E4000C 946119B 107BA6B6 17BE5DB2)
 "(SB-C::INITIAL-UNUSED T SET NIL)"
 "(  (& (>> val 2) 3) )")
(#(36C1C1A 3E4000C A8F03FB AD1E8BA B2215A5 B9E470B E6153B7 121266F1 1316953C 16139847 170F0B58 19E4FB07)
 "(:TOPLEVEL-XEP :ZOMBIE :ASSIGNMENT :MV-LET :LET :CLEANUP :ESCAPE :TOPLEVEL :EXTERNAL :DELETED :OPTIONAL NIL)"
 "((let ((tab #a((8) (unsigned-byte 8) 0 8 13 7 8 9 0 2)))
  (let ((b (& (>> val 4) #x7)))
   (let ((a (>> (<< val 4) 29)))
    (^ a (aref tab b))))))")
(#(3E4000C 551F3D5 17BE5DB2 1B68F328)
 "(:COMPUTE-ONLY :FORCE-TO-STACK NIL T)"
 "(  (& (>> val 2) 3) )")
(#(3FF4B3 14EE526 3CEB7B0 3E4000C 563EB8C)
 "(:FIXED :KNOWN-RETURN :LOCAL-CALL :FULL-CALL NIL)"
 "(  (& (+ (>> val 4) (>> val 16)) 7))")
(#(38A0CEF 3E4000C 8DAFFE7 169B6C84)
 "(:UNSPECIFIC :WILD :NEWEST NIL)"
 "(  (& (+ val (>> val 2)) 3) )")
(#(38A0CEF 3E4000C 68B5166 169B6C84)
 "(:UNC :WILD :UNSPECIFIC NIL)"
 "(  (& (>> val 6) 3) )")
(#(3E4000C 4A3C52B A5392C4 1565008D 15878D53 1BB5BFF6)
 "(:NAMED :PREDICATE :COPIER :CONSTRUCTOR :CONC-NAME NIL)"
 "(  (& (+ (>> val 4) (>> val 14)) 7))")
(#(3E4000C 4D67BB1 C7690D3 D0845D9 10FD1211 15584644 18AD9421 1EB82D24)
 "(NIL :SUPERSEDE :APPEND :OVERWRITE :RENAME-AND-DELETE :RENAME :NEW-VERSION :ERROR)"
 "(  (& (+ (>> val 1) (>> val 5)) 7))")
(#(3E4000C A8F03FB AD1E8BA B2215A5 16139847)
 "(NIL :ESCAPE :CLEANUP :OPTIONAL :ASSIGNMENT)"
 "(  (& (- val (>> val 26)) 7))")
(#(3E4000C A8F03FB B2215A5 B9E470B 16139847 19E4FB07)
 "(:OPTIONAL :EXTERNAL :TOPLEVEL NIL :ESCAPE :CLEANUP)"
 "(  (& (>> val 9) 7))")
(#(16F4DAA 21FDBD3 5ECB3AE 6F06241 749E101 822628A 8DB6248 B6F7117 C38EAA1 C7FAA2A D2D2AEC 12A7D0B4 14F9B468 155C0369 15ABAFAA
   16200592 17389CA2 17BE5DB2 1AEFC70F 1BFF474C 1C928997 1DC7A611 1DF3D23A 1E0FCECD 1E4F5E55 1E720E34)
 "(:LG :F :EQ :LE :LT :LEU :LTU :N :VS :T :NE :GT :GE :GTU :GEU :P :VC :O :ULE :UGE :UE :U :G :UG :L :UL)"
 "((let ((tab #a((16) (unsigned-byte 8) 15 31 0 15 1 21 31 0 24 18 0 7 16 18 13 0)))
  (let ((b (& (>> val 4) #xf)))
   (let ((a (>> (<< val 7) 28)))
    (^ a (aref tab b))))))")
(#(47CD79C 72984B1 852CFC4 9800221 16AE3239 1FE4E0A8)
 "(:XCC :ICC :FCC3 :FCC2 :FCC1 :FCC0)"
 "(  (& (+ (>> val 3) (>> val 20)) 7))")
(#(18531C5 39DC3DA 6CAE443 134DBB03 19465540 1A6F3BA9)
 "(:GEZ :GZ :NZ :LZ :LEZ :Z)"
 "(  (& (- (>> val 10) (>> val 15)) 7))")
(#(3E4000C A8F03FB B2215A5 B9E470B 19E4FB07)
 "(NIL :EXTERNAL :OPTIONAL :TOPLEVEL :CLEANUP)"
 "(  (& (^ val (>> val 10)) 7))")
(#(3E4000C 85A9D0F B9E470B 1FF36ED1)
 "(NIL :INHERITED :EXTERNAL :INTERNAL)"
 "(  (& (>> val 1) 3) )")
(#(3E4000C B570D6F 14792CA0 1E362EC1 1EF7DF06)
 "(:KEY-OR-VALUE :KEY-AND-VALUE :VALUE :KEY NIL)"
 "(  (& (+ (>> val 2) (>> val 15)) 7))")
(#(3E4000C 7C94100 943F70E 1956CA9B)
 "(NIL :STRINGS :BOTH :SYMBOLS)"
 "(  (& (>> val 1) 3) )")
(#(32C5B45 3E4000C 5FDAE36 61DD4A0 DB99C7F 1547E84B 1D73BD1E)
 "(:VERSION :TYPE :NAME :DIRECTORY :DEVICE :HOST NIL)"
 "(  (& (^ (>> val 2) (>> val 20)) 7))")
(#(440002 69CB71D D01C0A4 1AF8CC21)
 "(NIL BASE-CHAR CHARACTER *)"
 "(  (& (>> val 18) 3) )")
(#(440002 85FCC7A 1A13A884 1CE6A754)
 "(NIL FLOAT RATIONAL INTEGER)"
 "(  (& (>> val 10) 3) )")
(#(440002 7C94100 F97347B 1CFBBF28)
 "(NIL :HEAD :TAIL :BOTH)"
 "(  (& (>> val 17) 3) )")
(#(440002 10BC32E6 1D1E3194 1F806395)
 "(:SPECIAL-FORM :MACRO :FUNCTION NIL)"
 "(  (& (>> val 8) 3) )")
(#(440002 5A6F13F 8064CC0 195DE993)
 "(NIL NOTINLINE MAYBE-INLINE INLINE)"
 "(  (& (>> val 7) 3) )")
(#(440002 2020E66 87F29FB 10CE71A4 1E40E977)
 "(NIL :FORTHCOMING-DEFCLASS-TYPE :INSTANCE :DEFINED :PRIMITIVE)"
 "(  (& (^ (>> val 1) (>> val 22)) 7))")
(#(440002 2D9D746 B0FE826 162BDDB3)
 "(:AUTO :IMMOBILE :DYNAMIC NIL)"
 "(  (& (>> val 10) 3) )")
(#(440002 121266F1 19E4FB07 1ED4A3A6 1EECC275)
 "(:DELETED :INITIAL :COMPLEX-TOPLEVEL :TOPLEVEL NIL)"
 "(  (& (- val (>> val 12)) 7))")
(#(894088A D6D0CF0 E0D4392 FEC4E06 139B5E17 1AB8B2C8)
 "(:DYNAMIC-EXTENT :TAGBODY :BLOCK :UNWIND-PROTECT :CATCH :SPECIAL-BIND)"
 "(  (& (- (>> val 9) (>> val 10)) 7))")
(#(440002 946119B 107BA6B6 17BE5DB2)
 "(SB-C::INITIAL-UNUSED T SET NIL)"
 "(  (& (- val (>> val 7)) 3) )")
(#(440002 36C1C1A A8F03FB AD1E8BA B2215A5 B9E470B E6153B7 121266F1 1316953C 16139847 170F0B58 19E4FB07)
 "(:TOPLEVEL-XEP :ZOMBIE :ASSIGNMENT :MV-LET :LET :CLEANUP :ESCAPE :TOPLEVEL :EXTERNAL :DELETED :OPTIONAL NIL)"
 "((let ((tab #a((8) (unsigned-byte 8) 0 11 0 2 8 0 11 4)))
  (let ((b (& (>> val 21) #x7)))
   (let ((a (>> (<< val 5) 29)))
    (^ a (aref tab b))))))")
(#(440002 551F3D5 17BE5DB2 1B68F328)
 "(:COMPUTE-ONLY :FORCE-TO-STACK NIL T)"
 "(  (& (>> val 4) 3) )")
(#(3FF4B3 440002 14EE526 3CEB7B0 563EB8C)
 "(:FIXED :KNOWN-RETURN :LOCAL-CALL :FULL-CALL NIL)"
 "(  (& (+ val (>> val 1)) 7))")
(#(440002 38A0CEF 8DAFFE7 169B6C84)
 "(:UNSPECIFIC :WILD :NEWEST NIL)"
 "(  (& (- val (>> val 13)) 3) )")
(#(440002 38A0CEF 68B5166 169B6C84)
 "(:UNC :WILD :UNSPECIFIC NIL)"
 "(  (& (>> val 6) 3) )")
(#(440002 4A3C52B A5392C4 1565008D 15878D53 1BB5BFF6)
 "(:NAMED :PREDICATE :COPIER :CONSTRUCTOR :CONC-NAME NIL)"
 "(  (& (>> val 2) 7))")
(#(440002 4D67BB1 C7690D3 D0845D9 10FD1211 15584644 18AD9421 1EB82D24)
 "(NIL :SUPERSEDE :APPEND :OVERWRITE :RENAME-AND-DELETE :RENAME :NEW-VERSION :ERROR)"
 "(  (& (- val (>> val 3)) 7))")
(#(440002 A8F03FB AD1E8BA B2215A5 16139847)
 "(NIL :ESCAPE :CLEANUP :OPTIONAL :ASSIGNMENT)"
 "(  (& (>> val 22) 7))")
(#(440002 A8F03FB B2215A5 B9E470B 16139847 19E4FB07)
 "(:OPTIONAL :EXTERNAL :TOPLEVEL NIL :ESCAPE :CLEANUP)"
 "(  (& (>> val 9) 7))")
(#(440002 A8F03FB B2215A5 B9E470B 19E4FB07)
 "(NIL :EXTERNAL :OPTIONAL :TOPLEVEL :CLEANUP)"
 "(  (& (+ (>> val 2) (>> val 14)) 7))")
(#(440002 B570D6F 14792CA0 1E362EC1 1EF7DF06)
 "(:KEY-OR-VALUE :KEY-AND-VALUE :VALUE :KEY NIL)"
 "(  (& (^ (>> val 1) (>> val 3)) 7))")
(#(440002 7C94100 943F70E 1956CA9B)
 "(NIL :STRINGS :BOTH :SYMBOLS)"
 "(  (& (>> val 8) 3) )")
(#(440002 32C5B45 5FDAE36 61DD4A0 DB99C7F 1547E84B 1D73BD1E)
 "(:VERSION :TYPE :NAME :DIRECTORY :DEVICE :HOST NIL)"
 "(  (& (- (>> val 14) (>> val 17)) 7))")
(#(69CB71D 8844002 D01C0A4 1AF8CC21)
 "(NIL BASE-CHAR CHARACTER *)"
 "(  (& (>> val 18) 3) )")
(#(85FCC7A 8844002 1A13A884 1CE6A754)
 "(NIL FLOAT RATIONAL INTEGER)"
 "(  (& (>> val 10) 3) )")
(#(7C94100 8844002 F97347B 1CFBBF28)
 "(NIL :HEAD :TAIL :BOTH)"
 "(  (& (>> val 17) 3) )")
(#(8844002 10BC32E6 1D1E3194 1F806395)
 "(:SPECIAL-FORM :MACRO :FUNCTION NIL)"
 "(  (& (>> val 8) 3) )")
(#(5A6F13F 8064CC0 8844002 195DE993)
 "(NIL NOTINLINE MAYBE-INLINE INLINE)"
 "(  (& (>> val 7) 3) )")
(#(2020E66 87F29FB 8844002 10CE71A4 1E40E977)
 "(NIL :FORTHCOMING-DEFCLASS-TYPE :INSTANCE :DEFINED :PRIMITIVE)"
 "(  (& (- (>> val 7) (>> val 28)) 7))")
(#(2D9D746 8844002 B0FE826 162BDDB3)
 "(:AUTO :IMMOBILE :DYNAMIC NIL)"
 "(  (& (>> val 10) 3) )")
(#(8844002 121266F1 19E4FB07 1ED4A3A6 1EECC275)
 "(:DELETED :INITIAL :COMPLEX-TOPLEVEL :TOPLEVEL NIL)"
 "(  (& (+ val (>> val 17)) 7))")
(#(8844002 946119B 107BA6B6 17BE5DB2)
 "(SB-C::INITIAL-UNUSED T SET NIL)"
 "(  (& (>> val 21) 3) )")
(#(36C1C1A 8844002 A8F03FB AD1E8BA B2215A5 B9E470B E6153B7 121266F1 1316953C 16139847 170F0B58 19E4FB07)
 "(:TOPLEVEL-XEP :ZOMBIE :ASSIGNMENT :MV-LET :LET :CLEANUP :ESCAPE :TOPLEVEL :EXTERNAL :DELETED :OPTIONAL NIL)"
 "((let ((tab #a((8) (unsigned-byte 8) 0 3 0 2 8 0 11 4)))
  (let ((b (& (>> val 21) #x7)))
   (let ((a (>> (<< val 5) 29)))
    (^ a (aref tab b))))))")
(#(551F3D5 8844002 17BE5DB2 1B68F328)
 "(:COMPUTE-ONLY :FORCE-TO-STACK NIL T)"
 "(  (& (>> val 4) 3) )")
(#(3FF4B3 14EE526 3CEB7B0 563EB8C 8844002)
 "(:FIXED :KNOWN-RETURN :LOCAL-CALL :FULL-CALL NIL)"
 "(  (& (+ val (>> val 1)) 7))")
(#(38A0CEF 8844002 8DAFFE7 169B6C84)
 "(:UNSPECIFIC :WILD :NEWEST NIL)"
 "(  (& (+ val (>> val 20)) 3) )")
(#(38A0CEF 68B5166 8844002 169B6C84)
 "(:UNC :WILD :UNSPECIFIC NIL)"
 "(  (& (>> val 6) 3) )")
(#(4A3C52B 8844002 A5392C4 1565008D 15878D53 1BB5BFF6)
 "(:NAMED :PREDICATE :COPIER :CONSTRUCTOR :CONC-NAME NIL)"
 "(  (& (>> val 2) 7))")
(#(4D67BB1 8844002 C7690D3 D0845D9 10FD1211 15584644 18AD9421 1EB82D24)
 "(NIL :SUPERSEDE :APPEND :OVERWRITE :RENAME-AND-DELETE :RENAME :NEW-VERSION :ERROR)"
 "(  (& (- val (>> val 3)) 7))")
(#(8844002 A8F03FB AD1E8BA B2215A5 16139847)
 "(NIL :ESCAPE :CLEANUP :OPTIONAL :ASSIGNMENT)"
 "(  (& (^ (>> val 6) (>> val 8)) 7))")
(#(8844002 A8F03FB B2215A5 B9E470B 16139847 19E4FB07)
 "(:OPTIONAL :EXTERNAL :TOPLEVEL NIL :ESCAPE :CLEANUP)"
 "(  (& (>> val 9) 7))")
(#(8844002 A8F03FB B2215A5 B9E470B 19E4FB07)
 "(NIL :EXTERNAL :OPTIONAL :TOPLEVEL :CLEANUP)"
 "(  (& (+ (>> val 3) (>> val 23)) 7))")
(#(8844002 B570D6F 14792CA0 1E362EC1 1EF7DF06)
 "(:KEY-OR-VALUE :KEY-AND-VALUE :VALUE :KEY NIL)"
 "(  (& (+ val (>> val 27)) 7))")
(#(7C94100 8844002 943F70E 1956CA9B)
 "(NIL :STRINGS :BOTH :SYMBOLS)"
 "(  (& (>> val 8) 3) )")
(#(32C5B45 5FDAE36 61DD4A0 8844002 DB99C7F 1547E84B 1D73BD1E)
 "(:VERSION :TYPE :NAME :DIRECTORY :DEVICE :HOST NIL)"
 "(  (& (+ (>> val 8) (>> val 27)) 7))")
(#(5B7D42 74A374 1560B2CB 1E610E42)
 "((SB-VM::DESCRIPTOR-REG . 0) (SB-VM::ANY-REG . 1) (SB-VM::SIGNED-REG . 2) (CONSTANT . 3))"
 "(  (& (>> val 11) 3) )")
(#(3E6427 28FD146 4E5986A 5231125 7DB2C9F 8472503 AFE2502 12B0DFD1 12F5447B 1714FADA 17DA1626 1A554EF0 1F65C212)
 "((:UNPARSE . SB-ALIEN::ALIEN-TYPE-CLASS-UNPARSE) (:TYPE= . SB-ALIEN::ALIEN-TYPE-CLASS-TYPE=) (:SUBTYPEP . SB-ALIEN::ALIEN-TYPE-CLASS-SUBTYPEP) (:LISP-REP . SB-ALIEN::ALIEN-TYPE-CLASS-LISP-REP) (:ALIEN-REP . SB-ALIEN::ALIEN-TYPE-CLASS-ALIEN-REP) (:EXTRACT-GEN . SB-ALIEN::ALIEN-TYPE-CLASS-EXTRACT-GEN) (:DEPOSIT-GEN . SB-ALIEN::ALIEN-TYPE-CLASS-DEPOSIT-GEN) (:NATURALIZE-GEN . SB-ALIEN::ALIEN-TYPE-CLASS-NATURALIZE-GEN) (:DEPORT-GEN . SB-ALIEN::ALIEN-TYPE-CLASS-DEPORT-GEN) (:DEPORT-ALLOC-GEN . SB-ALIEN::ALIEN-TYPE-CLASS-DEPORT-ALLOC-GEN) (:DEPORT-PIN-P . SB-ALIEN::ALIEN-TYPE-CLASS-DEPORT-PIN-P) (:ARG-TN . SB-ALIEN::ALIEN-TYPE-CLASS-ARG-TN) (:RESULT-TN . SB-ALIEN::ALIEN-TYPE-CLASS-RESULT-TN))"
 "((let ((tab #a((8) (unsigned-byte 8) 13 0 0 8 0 1 3 8)))
  (let ((b (& val #x7)))
   (let ((a (>> (<< val 3) 29)))
    (^ a (aref tab b))))))")
(#(AB43E63 12A49432 149EED8C 193D63FC 1DE3F2D2)
 "((:UNDERFLOW . 8) (:OVERFLOW . 4) (:INEXACT . 16) (:INVALID . 1) (:DIVIDE-BY-ZERO . 2))"
 "(  (& (+ (>> val 1) (>> val 27)) 7))")
(#(2A250E8 5988B41 650488F 16DEE08A)
 "((:NEAREST . 0) (:ZERO . 3) (:POSITIVE-INFINITY . 1) (:NEGATIVE-INFINITY . 2))"
 "(  (& val 3) )")
(#(21FDBD3 27B25EB 4D7207E 6F06241 749E101 97B3789 A34881E B6F7117 F59FFA9 122B3822 14F9B468 155C0369 158E83F4 1619085E
   1AAA5C85 1DC7A611 1DF3D23A)
 "((:EQ . 0) (:NE . 1) (:CS . 2) (:HS . 2) (:CC . 3) (:LO . 3) (:MI . 4) (:PL . 5) (:VS . 6) (:VC . 7) (:HI . 8) (:LS . 9) (:GE . 10) (:LT . 11) (:GT . 12) (:LE . 13) (:AL . 14))"
 "((let ((tab #a((16) (unsigned-byte 8) 1 13 7 0 1 7 0 0 15 0 16 14 0 0 14 3)))
  (let ((b (& (>> val 3) #xf)))
   (let ((a (>> (<< val 7) 28)))
    (^ a (aref tab b))))))")
(#(ADF419 21FDBD3 51A8700 51AD9A3 8135D10 B6F7117 C7FAA2A FDD3870 14F9B468 155C0369 17BE5DB2 18208504 1B592515 1DF3D23A)
 "((:T . 31) (:LT . 16) (:LE . 20) (:EQ . 4) (:LNG . 6) (:GE . 12) (:NE . 24) (:NG . 20) (:LLT . 2) (:F . 0) (:LLE . 6) (:LGE . 5) (:LGT . 1) (:LNL . 5))"
 "((let ((tab #a((8) (unsigned-byte 8) 0 12 3 11 14 11 0 5)))
  (let ((b (& val #x7)))
   (let ((a (>> (<< val 3) 29)))
    (^ a (aref tab b))))))")
(#(AB43E63 10FD52BF 12A49432 149EED8C 193D63FC 1DE3F2D2)
 "((:UNDERFLOW . 16) (:OVERFLOW . 8) (:INEXACT . 32) (:INVALID . 1) (:DIVIDE-BY-ZERO . 4) (:DENORMALIZED-OPERAND . 2))"
 "(  (& (^ (>> val 13) (>> val 21)) 7))")
(#(9840EF F8A81D6 1D7C58CE)
 "((:24-BIT . 0) (:53-BIT . 2) (:64-BIT . 3))"
 "(  (& (>> val 4) 3) )")
(#(18531C5 21FDBD3 261A30B 401AD7B 4C56AC4 51B38E7 524389C 61E2BF7 B6F7117 C38EAA1 CA7DAB8 FCF1E65 FDD3870 104B075D 124D6332
   13621410 13A2408C 14A4CE82 14F9B468 1711EE7D 17389CA2 18E6C318 190DD5D2 19465540 19CB1459 1A72108A 1AB987A6 1DF3D23A
   1E0FCECD 1E720E34 1EEC98A7)
 "((:O . 0) (:NO . 1) (:B . 2) (:NAE . 2) (:C . 2) (:NB . 3) (:AE . 3) (:NC . 3) (:EQ . 4) (:E . 4) (:Z . 4) (:NE . 5) (:NZ . 5) (:BE . 6) (:NA . 6) (:NBE . 7) (:A . 7) (:S . 8) (:NS . 9) (:P . 10) (:PE . 10) (:NP . 11) (:PO . 11) (:L . 12) (:NGE . 12) (:NL . 13) (:GE . 13) (:LE . 14) (:NG . 14) (:NLE . 15) (:G . 15))"
 "((let ((tab #a((16) (unsigned-byte 8) 24 13 0 22 0 19 31 21 14 13 17 7 0 16 22 31)))
  (let ((b (>> (<< val 3) 28)))
   (let ((a (& val #xf)))
    (^ a (aref tab b))))))")
(#(440002 A8F03FB AD1E8BA B2215A5)
 "(NIL :ASSIGNMENT :OPTIONAL :CLEANUP)"
 "(  (& (>> val 16) 3) )")
(#(104000C A8F03FB AD1E8BA B2215A5)
 "(NIL :ASSIGNMENT :OPTIONAL :CLEANUP)"
 "(  (& val 3) )")
(#(1040002 A8F03FB AD1E8BA B2215A5)
 "(NIL :ASSIGNMENT :OPTIONAL :CLEANUP)"
 "(  (& (>> val 16) 3) )")
(#(3E4000C A8F03FB AD1E8BA B2215A5)
 "(NIL :ASSIGNMENT :OPTIONAL :CLEANUP)"
 "(  (& val 3) )")
(#(8844002 A8F03FB AD1E8BA B2215A5)
 "(NIL :ASSIGNMENT :OPTIONAL :CLEANUP)"
 "(  (& (>> val 16) 3) )")
(#(21FDBD3 C526A73 11E3A7FE 19C62B17 1C5C0C65)
 "(EQ EQL EQUAL EQUALP =)"
 "(  (& (^ val (>> val 22)) 7))")
(#(C526A73 11E3A7FE 19C62B17 1C5C0C65)
 "(= EQL EQUAL EQUALP)"
 "(  (& (+ val (>> val 1)) 3) )")
)
;; EOF
